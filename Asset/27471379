<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.mulrbx.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">BattleWagons</string>
			<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=26734601</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">106</int>
				<CoordinateFrame name="CFrame">
					<X>-253</X>
					<Y>16</Y>
					<Z>-241</Z>
					<R00>0.91893363</R00>
					<R01>-9.52260307e-005</R01>
					<R02>0.39441222</R02>
					<R10>-0.394407064</R10>
					<R11>0.00490923878</R11>
					<R12>0.918922722</R12>
					<R20>-0.00202376791</R20>
					<R21>-0.999988079</R21>
					<R22>0.00447370345</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">1072</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4</X>
					<Y>1.20000005</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBX2">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Shot</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=26618834</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ShotTwo</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=26635012</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Yeehaw</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=26635106</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Texture" referent="RBX5">
				<Properties>
					<token name="Face">1</token>
					<string name="Name">Texture</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<float name="StudsPerTileU">4</float>
					<float name="StudsPerTileV">2</float>
					<Content name="Texture"><url>http://www.mulrbx.com/asset/?id=26733113</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Miss</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=26954620</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX7">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Connect4_OpponentCleanup</string>
				<ProtectedString name="Source">----------------------------------------------------------------------------
-------- cleans up the opponent&apos;s stuff if the player leaves

game.Players.ChildRemoved:connect(function(p)
&#9;if p == script.Challenger.Value then
&#9;&#9;script.Cleanup.Value:remove()
&#9;&#9;script:remove()
&#9;end
end)
&#9;&#9;</ProtectedString>
			</Properties>
			<Item class="ObjectValue" referent="RBX8">
				<Properties>
					<string name="Name">Challenger</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
			<Item class="ObjectValue" referent="RBX9">
				<Properties>
					<string name="Name">Cleanup</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX10">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Connect4_ToolMain</string>
				<ProtectedString name="Source">-- probably a lot of ineffeciency in this right now :(

local gameState = 0 --[[
0 = no game
1 = waiting for opponent to accept or decline
2 = game running
3 = game over message pending
]]

local opponentSettingUpShips = true
local playerSettingUpShips = true
local playerSalvo = 5
local opponentSalvo = 5


-- load in images once to get them in cache (sometimes they take awhile to load cold)
loader = Instance.new(&quot;ImageLabel&quot;)
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26729984&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26730038&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26730082&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26730112&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26951651&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26951705&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26951739&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26951769&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26951816&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
loader.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
loader:remove()

local playerShipIndex = 1

local playerShips = {}          -- create the matrix
&#9;for j=1,5 do
&#9;&#9;if j == 5 then
&#9;&#9;&#9;playerShips[j] = {{0,0},{0,0},{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 4 then
&#9;&#9;&#9;playerShips[j] = {{0,0},{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 3 then
&#9;&#9;&#9;playerShips[j] = {{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 2 then
&#9;&#9;&#9;playerShips[j] = {{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 1 then
&#9;&#9;&#9;playerShips[j] = {{0,0},{0,0}}
&#9;&#9;end
&#9;end

local opponentShipIndex = 1

local opponentShips = {}          -- create the matrix
&#9;for j=1,5 do
&#9;&#9;if j == 5 then
&#9;&#9;&#9;opponentShips[j] = {{0,0},{0,0},{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 4 then
&#9;&#9;&#9;opponentShips[j] = {{0,0},{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 3 then
&#9;&#9;&#9;opponentShips[j] = {{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 2 then
&#9;&#9;&#9;opponentShips[j] = {{0,0},{0,0},{0,0}}
&#9;&#9;elseif j == 1 then
&#9;&#9;&#9;opponentShips[j] = {{0,0},{0,0}}
&#9;&#9;end
&#9;end

local opponentLastClick = {0,0}
local playerLastClick = {0,0}
local playerShipNum = 1
local opponentShipNum = 1

local gameTurn = true --[[
true = your turn
false = opponents turn

acts as a spinlock for the main loop
]]

local resourceGui = script.Parent.BattleshipGui
resourceGui.Parent = nil
local opponentGui = nil
local playerGui = nil --[[
the guis for your and the opponent
]]

local right = true
local left = true
local up = true
local down = true
local playerValidSpots = {{0,0},{0,0},{0,0},{0,0}}
local opponentValidSpots = {{0,0},{0,0},{0,0},{0,0}}

local gridMaker = Instance.new(&quot;ImageButton&quot;)
gridMaker.Size = UDim2.new(0,32,0,28.5)
gridMaker.BackgroundColor3 = Color3.new(255,0,0)
gridMaker.BackgroundTransparency = 1
gridMaker.ZIndex = 10

local shipGrid = Instance.new(&quot;ImageButton&quot;)
shipGrid.Size = UDim2.new(0,32,0,28,5)
shipGrid.BackgroundColor3 = Color3.new(0,0,255)
shipGrid.BackgroundTransparency = 1
shipGrid.ZIndex = 10

for i = 1, 11 do

&#9;for j = 1,9 do
&#9;&#9;
&#9;&#9;local name = tostring(i) .. tostring(j)

&#9;&#9;local gridSpot = gridMaker:clone()
&#9;&#9;gridSpot.Name = name
&#9;&#9;gridSpot.Position = UDim2.new(0,2 + (i - 1) * 32,0,(j - 1) * 28.5)
&#9;&#9;gridSpot.Parent = resourceGui.MainFrame.StrikeBoard

&#9;&#9;local shipSpot = shipGrid:clone()
&#9;&#9;shipSpot.Name = name
&#9;&#9;shipSpot.Position = UDim2.new(0,2 + (i - 1) * 32,0, (j - 1) * 28.5)
&#9;&#9;shipSpot.Parent = resourceGui.MainFrame.ShipBoard

&#9;end

end

local opponentCleanupScript = nil --[[
script to clean up the opponent&apos;s gui if I leave
]]

local playerStrikeBoard = {}          -- create the matrix
for i=1,11 do
&#9;playerStrikeBoard[i] = {}     -- create a new row
&#9;for j=1,9 do
&#9;&#9;playerStrikeBoard[i][j] = 0 -- [0 = open spot] [1 = has pin, no hit] [2 = has pin, has hit]
&#9;end
end

local playerShipBoard = {}          -- create the matrix
for i=1,11 do
&#9;playerShipBoard[i] = {}     -- create a new row
&#9;for j=1,9 do
&#9;&#9;playerShipBoard[i][j] = 0 -- [0 = open spot] [1 = has pin, no hit] [2 = has pin, has hit]
&#9;end
end

local opponentStrikeBoard = {}          -- create the matrix
for i=1,11 do
&#9;opponentStrikeBoard[i] = {}     -- create a new row
&#9;for j=1,9 do
&#9;&#9;opponentStrikeBoard[i][j] = 0 -- [0 = open spot] [1 = has pin, no hit] [2 = has pin, has hit]
&#9;end
end

local opponentShipBoard = {}          -- create the matrix
for i=1,11 do
&#9;opponentShipBoard[i] = {}     -- create a new row
&#9;for j=1,9 do
&#9;&#9;opponentShipBoard[i][j] = 0 -- [0 = open spot] [1 = has pin, no hit] [2 = has pin, has hit]
&#9;end
end

local player = nil
local opponent = nil --[[
me and the opponent, (and possibly other players / viewers in other games)
]]

local opponentChangedSignal = nil --[[
signal must be connected when the tool is deselected, unlike mouse ones which expire automatically
]]

function hasWon(num)
&#9;if num == 1 then

&#9;&#9;local opHits = 0
&#9;&#9;for i = 1,11 do
&#9;&#9;&#9;for j = 1, 9 do
&#9;&#9;&#9;&#9;if opponentShipBoard[i][j] == 2 then
&#9;&#9;&#9;&#9;&#9;opHits = opHits + 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;if opHits &gt; 16 then
&#9;&#9;&#9;return true
&#9;&#9;else
&#9;&#9;&#9;return false
&#9;&#9;end

&#9;elseif num == 2 then

&#9;&#9;local hits = 0
&#9;&#9;for i = 1,11 do
&#9;&#9;&#9;for j = 1, 9 do
&#9;&#9;&#9;&#9;if playerShipBoard[i][j] == 2 then
&#9;&#9;&#9;&#9;&#9;hits = hits + 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;if hits &gt; 16 then
&#9;&#9;&#9;return true
&#9;&#9;else
&#9;&#9;&#9;return false
&#9;&#9;end

&#9;end
end

function boardFull()

&#9;return false

end

function setupPlayerBoard()
&#9;&#9;for x = 1, 11 do
&#9;&#9;&#9;for y = 1, 9 do

&#9;&#9;&#9;&#9;local stringer = tostring(x) .. tostring(y)

&#9;&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[tonumber(stringer)].MouseEnter:connect(function()
&#9;&#9;&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[tonumber(stringer)].Image = &quot;http://www.mulrbx.com/asset/?id=26637734&quot;
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[tonumber(stringer)].MouseLeave:connect(function()
&#9;&#9;&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;end
&#9;&#9;end
end


function setupOpponentBoard()
&#9;for x = 1, 11 do
&#9;&#9;&#9;for y = 1, 9 do

&#9;&#9;&#9;&#9;local stringer = tostring(x) .. tostring(y)
&#9;&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[tonumber(stringer)].MouseEnter:connect(function()
&#9;&#9;&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[tonumber(stringer)].Image = &quot;http://www.mulrbx.com/asset/?id=26637734&quot;
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[tonumber(stringer)].MouseLeave:connect(function()
&#9;&#9;&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;end
&#9;&#9;end
end

function createPlayerGui()
&#9;--remove the old gui
&#9;if playerGui then
&#9;&#9;playerGui:remove()
&#9;end
&#9;--set up the player&apos;s GUI
&#9;playerGui = resourceGui:clone()
&#9;playerGui.Parent = player.PlayerGui
&#9;playerGui.SideFrame.Visible = true
&#9;setupPlayerBoard()
&#9;--make the popupframe hide on ok pressed
&#9;playerGui.PopupFrame.Accept.MouseButton1Down:connect(function()
&#9;&#9;--hack, this must be the gameover message if gameState is 3, reset game state
&#9;&#9;if gameState == 3 then
&#9;&#9;&#9;playerGui.MainFrame.Visible = false
&#9;&#9;&#9;playerGui.SideFrame.TXT1.Text = &quot;Click on a player to&quot;
&#9;&#9;&#9;playerGui.SideFrame.TXT2.Text = &quot;challenge them&quot;
&#9;&#9;&#9;playerGui.SideFrame.Visible = true
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;for i = -128, 0, 4 do
&#9;&#9;&#9;&#9;&#9;playerGui.SideFrame.Position = UDim2.new(0, i, 0.5, -16)
&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;end&#9;
&#9;&#9;&#9;end)&#9;&#9;&#9;
&#9;&#9;&#9;gameState = 0
&#9;&#9;end
&#9;&#9;--hide me
&#9;&#9;playerGui.PopupFrame.Visible = false
&#9;end)
end

function findValidPlayerPlaces(x,y,shipSize)

&#9;if x + (shipSize - 1) &lt;= 11 then
&#9;&#9;for i = x + 1, x + shipSize - 1 do
&#9;&#9;&#9;if playerShipBoard[i][y] == 1 then
&#9;&#9;&#9;&#9;right = false
&#9;&#9;&#9;&#9;print(&quot;no right&quot;)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;print(&quot;no right&quot;)
&#9;&#9;right = false
&#9;end

&#9;if x - (shipSize - 1) &gt; 0 then
&#9;&#9;for i = x - shipSize + 1, x - 1 do
&#9;&#9;&#9;if playerShipBoard[i][y] == 1 then
&#9;&#9;&#9;&#9;left = false
&#9;&#9;&#9;&#9;print(&quot;no left&quot;)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;print(&quot;no left&quot;)
&#9;&#9;left = false
&#9;end

&#9;if y - (shipSize - 1) &gt; 0 then
&#9;&#9;for i = y - (shipSize - 1),y - 1 do
&#9;&#9;&#9;if playerShipBoard[x][i] == 1 then
&#9;&#9;&#9;&#9;up = false
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;up = false
&#9;end

&#9;if y + (shipSize - 1) &lt; 10 then
&#9;&#9;for i = y + 1, y + shipSize - 1 do
&#9;&#9;&#9;if playerShipBoard[x][i] == 1 then
&#9;&#9;&#9;&#9;down = false
&#9;&#9;&#9;&#9;print(&quot;no down&quot;)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;print(&quot;no down&quot;)
&#9;&#9;down = false
&#9;end

&#9;if right then

&#9;&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Name = &quot;right&quot;
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1 + (shipSize - 1)), 0, 28.5*(y -1))
&#9;&#9;playerValidSpots[1] = {x + (shipSize - 1),y}


&#9;end

&#9;if left then

&#9;&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Name = &quot;left&quot;
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1 -  (shipSize - 1)), 0, 28.5*(y -1))
&#9;&#9;playerValidSpots[2] = {x - (shipSize - 1),y}

&#9;end

&#9;if up then

&#9;&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Name = &quot;down&quot;
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1), 0, 28.5*(y - 1 -  (shipSize - 1)))
&#9;&#9;playerValidSpots[4] = {x,y -  (shipSize - 1)}

&#9;&#9;
&#9;end

&#9;if down then

&#9;&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Name = &quot;up&quot;
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1), 0, 28.5*(y - 1 +  (shipSize - 1)))
&#9;&#9;playerValidSpots[3] = {x,y +  (shipSize - 1)}

&#9;end

&#9;resetPlaces()

end


function findValidOpponentPlaces(x,y,shipSize)

&#9;if x + (shipSize - 1) &lt;= 11 then
&#9;&#9;for i = x + 1, x + shipSize - 1 do
&#9;&#9;&#9;if opponentShipBoard[i][y] == 1 then
&#9;&#9;&#9;&#9;right = false
&#9;&#9;&#9;&#9;print(&quot;no right&quot;)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;print(&quot;no right&quot;)
&#9;&#9;right = false
&#9;end

&#9;if x - (shipSize - 1) &gt; 0 then
&#9;&#9;for i = x - shipSize + 1, x - 1 do
&#9;&#9;&#9;if opponentShipBoard[i][y] == 1 then
&#9;&#9;&#9;&#9;left = false
&#9;&#9;&#9;&#9;print(&quot;no left&quot;)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;print(&quot;no left&quot;)
&#9;&#9;left = false
&#9;end

&#9;if y - (shipSize - 1) &gt; 0 then
&#9;&#9;for i = y - (shipSize - 1),y - 1 do
&#9;&#9;&#9;if opponentShipBoard[x][i] == 1 then
&#9;&#9;&#9;&#9;up = false
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;up = false
&#9;end

&#9;if y + (shipSize - 1) &lt; 10 then
&#9;&#9;for i = y + 1, y + shipSize - 1 do
&#9;&#9;&#9;if opponentShipBoard[x][i] == 1 then
&#9;&#9;&#9;&#9;down = false
&#9;&#9;&#9;&#9;print(&quot;no down&quot;)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;print(&quot;no down&quot;)
&#9;&#9;down = false
&#9;end

&#9;if right then

&#9;&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Name = &quot;right&quot;
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1 + (shipSize - 1)), 0, 28.5*(y -1))
&#9;&#9;opponentValidSpots[1] = {x + (shipSize - 1),y}


&#9;end

&#9;if left then

&#9;&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Name = &quot;left&quot;
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1 -  (shipSize - 1)), 0, 28.5*(y -1))
&#9;&#9;opponentValidSpots[2] = {x - (shipSize - 1),y}

&#9;end

&#9;if up then

&#9;&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Name = &quot;down&quot;
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1), 0, 28.5*(y - 1 -  (shipSize - 1)))
&#9;&#9;opponentValidSpots[4] = {x,y -  (shipSize - 1)}

&#9;&#9;
&#9;end

&#9;if down then

&#9;&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637753&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.ZIndex = 60
&#9;&#9;pc.Name = &quot;up&quot;
&#9;&#9;pc.Visible = true
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x - 1), 0, 28.5*(y - 1 +  (shipSize - 1)))
&#9;&#9;opponentValidSpots[3] = {x,y +  (shipSize - 1)}

&#9;end

&#9;resetPlaces()

end


function resetPlaces()

&#9;right = true
&#9;left = true
&#9;up = true
&#9;down = true

end

function removePlayerPlaces()

&#9;local leftGui = playerGui.MainFrame.ShipBoard:FindFirstChild(&quot;left&quot;,false)
&#9;if leftGui ~= nil then
&#9;&#9;leftGui:remove()
&#9;end

&#9;local rightGui = playerGui.MainFrame.ShipBoard:FindFirstChild(&quot;right&quot;,false)
&#9;if rightGui ~= nil then
&#9;&#9;rightGui:remove()
&#9;end

&#9;local upGui = playerGui.MainFrame.ShipBoard:FindFirstChild(&quot;up&quot;,false)
&#9;if upGui ~= nil then
&#9;&#9;upGui:remove()
&#9;end

&#9;local downGui =playerGui.MainFrame.ShipBoard:FindFirstChild(&quot;down&quot;,false)
&#9;if downGui ~= nil then
&#9;&#9;downGui:remove()
&#9;end

&#9;playerValidSpots = {{0,0},{0,0},{0,0},{0,0}}

end

function removeOpponentPlaces()

&#9;local leftGui = opponentGui.MainFrame.ShipBoard:FindFirstChild(&quot;left&quot;,false)
&#9;if leftGui ~= nil then
&#9;&#9;leftGui:remove()
&#9;end

&#9;local rightGui = opponentGui.MainFrame.ShipBoard:FindFirstChild(&quot;right&quot;,false)
&#9;if rightGui ~= nil then
&#9;&#9;rightGui:remove()
&#9;end

&#9;local upGui = opponentGui.MainFrame.ShipBoard:FindFirstChild(&quot;up&quot;,false)
&#9;if upGui ~= nil then
&#9;&#9;upGui:remove()
&#9;end

&#9;local downGui = opponentGui.MainFrame.ShipBoard:FindFirstChild(&quot;down&quot;,false)
&#9;if downGui ~= nil then
&#9;&#9;downGui:remove()
&#9;end

&#9;validSpots = {{0,0},{0,0},{0,0},{0,0}}

end

function chooseRightImage(pc,size)

&#9;if size == 5 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730540&quot;
&#9;elseif size == 4 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730544&quot;
&#9;elseif size == 3 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730555&quot;
&#9;elseif size ==2 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730572&quot;
&#9;end

end

function chooseLeftImage(pc,size)

&#9;if size == 5 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731231&quot;
&#9;elseif size == 4 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731219&quot;
&#9;elseif size == 3 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731215&quot;
&#9;elseif size ==2 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731202&quot;
&#9;end

end

function chooseDownImage(pc,size)

&#9;if size == 5 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731367&quot;
&#9;elseif size == 4 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731358&quot;
&#9;elseif size == 3 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731332&quot;
&#9;elseif size ==2 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26731318&quot;
&#9;end

end

function setupPlayerShip(x,y,name,size)

&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;if size == 5 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26729984&quot;
&#9;elseif size == 4 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730038&quot;
&#9;elseif size == 3 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730082&quot;
&#9;elseif size ==2 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730112&quot;
&#9;end
&#9;pc.Visible = true
&#9;pc.ZIndex = 50
&#9;local validPlayerTarget = false

&#9;for i = 1, #playerValidSpots do

&#9;&#9;local spot = playerValidSpots[i]
&#9;&#9;if x ~= 0 and y ~= 0 and spot[1] == x and spot [2] == y then
&#9;&#9;&#9;validPlayerTarget = true
&#9;&#9;&#9;if x &lt; playerLastClick[1] then
&#9;&#9;&#9;&#9;playerShips[playerShipIndex][1] = {playerLastClick[1],playerLastClick[2]}
&#9;&#9;&#9;&#9;for j = x, playerLastClick[1] do
&#9;&#9;&#9;&#9;&#9;chooseLeftImage(pc,size)
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32 * size,0,28.5)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;&#9;&#9;&#9;&#9;playerShipBoard[j][y] = 1
&#9;&#9;&#9;&#9;&#9;playerShips[playerShipIndex][j - (x - 1)] = {j,y}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif x &gt; playerLastClick[1] then
&#9;&#9;&#9;&#9;playerShips[playerShipIndex][1] = {playerLastClick[1],playerLastClick[2]}
&#9;&#9;&#9;&#9;for j = playerLastClick[1], x do
&#9;&#9;&#9;&#9;&#9;chooseRightImage(pc,size)
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32 * size,0,28.5)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(playerLastClick[1]-1), 0, 28.5*(y -1))
&#9;&#9;&#9;&#9;&#9;playerShipBoard[j][y] = 1
&#9;&#9;&#9;&#9;&#9;playerShips[playerShipIndex][j - (playerLastClick[1] - 1)] = {j,y}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif y &gt; playerLastClick[2] then
&#9;&#9;&#9;&#9;playerShips[playerShipIndex][1] = {playerLastClick[1],playerLastClick[2]}
&#9;&#9;&#9;&#9;for j = playerLastClick[2], y do
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5 * size)
&#9;&#9;&#9;&#9;&#9;chooseDownImage(pc,size)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(playerLastClick[2] -1))
&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][j] = 1
&#9;&#9;&#9;&#9;&#9;playerShips[playerShipIndex][j - (playerLastClick[2] - 1)] = {x,j}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif y &lt; playerLastClick[2] then
&#9;&#9;&#9;&#9;playerShips[playerShipIndex][1] = {playerLastClick[1],playerLastClick[2]}
&#9;&#9;&#9;&#9;for j = y, playerLastClick[2] do
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5 * size)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][j] = 1
&#9;&#9;&#9;&#9;&#9;playerShips[playerShipIndex][j - (y - 1)] = {x,j}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;pc.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;&#9;break
&#9;&#9;end

&#9;end

&#9;if validPlayerTarget == false then

&#9;&#9;pc:remove()
&#9;&#9;playerShipBoard[x][y] = 0

&#9;else
&#9;&#9;playerShipNum = playerShipNum + 1
&#9;&#9;if playerShipNum &gt; 5 then
&#9;&#9;&#9;playerSettingUpShips = false
&#9;&#9;&#9;playerGui.MainFrame.SetupShipFrame.Status.Text = &quot;Waiting for opponent...&quot;
&#9;&#9;end
&#9;end

&#9;removePlayerPlaces()

&#9;invalidatePlayerClicks(name,x,y)

end


function setupOpponentShip(x,y,name,size)

&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;if size == 5 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26729984&quot;
&#9;elseif size == 4 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730038&quot;
&#9;elseif size == 3 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730082&quot;
&#9;elseif size ==2 then
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26730112&quot;
&#9;end
&#9;pc.Visible = true
&#9;pc.ZIndex = 50
&#9;local validTarget = false

&#9;for i = 1, #opponentValidSpots do

&#9;&#9;local spot = opponentValidSpots[i]
&#9;&#9;if x ~= 0 and y ~= 0 and spot[1] == x and spot [2] == y then
&#9;&#9;&#9;validTarget = true
&#9;&#9;&#9;if x &lt; opponentLastClick[1] then
&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][1] = {opponentLastClick[1],opponentLastClick[2]}
&#9;&#9;&#9;&#9;for j = x, opponentLastClick[1] do
&#9;&#9;&#9;&#9;&#9;chooseLeftImage(pc,size)
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32 * size,0,28.5)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;&#9;&#9;&#9;&#9;opponentShipBoard[j][y] = 1
&#9;&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][j - (x - 1)] = {j,y}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif x &gt; opponentLastClick[1] then
&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][1] = {opponentLastClick[1],opponentLastClick[2]}
&#9;&#9;&#9;&#9;for j = opponentLastClick[1], x do
&#9;&#9;&#9;&#9;&#9;chooseRightImage(pc,size)
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32 * size,0,28.5)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(opponentLastClick[1]-1), 0, 28.5*(y -1))
&#9;&#9;&#9;&#9;&#9;opponentShipBoard[j][y] = 1
&#9;&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][j - (opponentLastClick[1] - 1)] = {j,y}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif y &gt; opponentLastClick[2] then
&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][1] = {opponentLastClick[1],opponentLastClick[2]}
&#9;&#9;&#9;&#9;for j = opponentLastClick[2], y do
&#9;&#9;&#9;&#9;&#9;chooseDownImage(pc,size)
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5 * size)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(opponentLastClick[2] -1))
&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][j] = 1
&#9;&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][j - (opponentLastClick[2] - 1)] = {x,j}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif y &lt; opponentLastClick[2] then
&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][1] = {opponentLastClick[1],opponentLastClick[2]}
&#9;&#9;&#9;&#9;for j = y, opponentLastClick[2] do
&#9;&#9;&#9;&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5 * size)
&#9;&#9;&#9;&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][j] = 1
&#9;&#9;&#9;&#9;&#9;opponentShips[opponentShipIndex][j - (y - 1)] = {x,j}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;pc.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;&#9;break
&#9;&#9;end

&#9;end

&#9;if validTarget == false then

&#9;&#9;pc:remove()
&#9;&#9;opponentShipBoard[x][y] = 0

&#9;else
&#9;&#9;opponentShipNum = opponentShipNum + 1
&#9;&#9;if opponentShipNum &gt; 5 then
&#9;&#9;&#9;opponentSettingUpShips = false
&#9;&#9;&#9;opponentGui.MainFrame.SetupShipFrame.Status.Text = &quot;Waiting for opponent...&quot;
&#9;&#9;end
&#9;end

&#9;removeOpponentPlaces()

&#9;invalidateOpponentClicks(name,x,y)

end

function invalidatePlayerClicks(name,x,y)
&#9;local removeMe = name .. playerLastClick[1] .. playerLastClick[2]
&#9;if playerShipBoard[x][y] == 0 then
&#9;&#9;playerShipBoard[playerLastClick[1]][playerLastClick[2]] = 0
&#9;end
&#9;playerLastClick[1] = 0
&#9;playerLastClick[2] = 0
&#9;playerGui.MainFrame.ShipBoard:FindFirstChild(removeMe, false):remove()
end

function invalidateOpponentClicks(name,x,y)
&#9;removeMe = name .. opponentLastClick[1] .. opponentLastClick[2]
&#9;if opponentShipBoard[x][y] == 0 then
&#9;&#9;opponentShipBoard[opponentLastClick[1]][opponentLastClick[2]] = 0
&#9;end
&#9;opponentLastClick[1] = 0
&#9;opponentLastClick[2] = 0
&#9;opponentGui.MainFrame.ShipBoard:FindFirstChild(removeMe, false):remove()
end


function setupShips()

&#9;for x = 1, 11 do
&#9;&#9;for y = 1, 9 do
&#9;&#9;
&#9;&#9;&#9;local stringer = tostring(x) .. tostring(y)

&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[stringer].MouseButton1Down:connect(function()

&#9;&#9;&#9;&#9;if playerShipBoard[x][y] == 0 then
&#9;&#9;&#9;&#9;&#9;-- clicked once, now we check to see if positions can be used properly
&#9;&#9;&#9;&#9;&#9;if playerLastClick[1] &gt; 0 then

&#9;&#9;&#9;&#9;&#9;&#9;if playerShipNum == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipIndex = 5
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupPlayerShip(x,y,&quot;first&quot;,5)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 2 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipIndex = 4
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupPlayerShip(x,y,&quot;second&quot;,4)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 3 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipIndex = 3
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupPlayerShip(x,y,&quot;third&quot;, 3)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 4 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipIndex = 2
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupPlayerShip(x,y,&quot;fourth&quot;,3)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 5 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;playerShipIndex = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupPlayerShip(x,y,&quot;fifth&quot;, 2)
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- first click, remember position and mark it
&#9;&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;&#9;if playerShipNum == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstPlayerPosition(&quot;first&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 2 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstPlayerPosition(&quot;second&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 3 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstPlayerPosition(&quot;third&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 4 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstPlayerPosition(&quot;fourth&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif playerShipNum == 5 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstPlayerPosition(&quot;fifth&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;end)

&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[stringer].MouseButton1Down:connect(function()

&#9;&#9;&#9;&#9;if opponentShipBoard[x][y] == 0 then
&#9;&#9;&#9;&#9;&#9;-- clicked once, now we check to see if positions can be used properly
&#9;&#9;&#9;&#9;&#9;if opponentLastClick[1] &gt; 0 then

&#9;&#9;&#9;&#9;&#9;&#9;if opponentShipNum == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipIndex = 5
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupOpponentShip(x,y,&quot;first&quot;,5)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 2 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipIndex = 4
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupOpponentShip(x,y,&quot;second&quot;,4)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 3 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipIndex = 3
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupOpponentShip(x,y,&quot;third&quot;, 3)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 4 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipIndex = 2
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupOpponentShip(x,y,&quot;fourth&quot;,3)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 5 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;opponentShipIndex = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;setupOpponentShip(x,y,&quot;fifth&quot;, 2)
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- first click, remember position and mark it
&#9;&#9;&#9;&#9;&#9;else

&#9;&#9;&#9;&#9;&#9;&#9;if opponentShipNum == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstOpponentPosition(&quot;first&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 2 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstOpponentPosition(&quot;second&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 3 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstOpponentPosition(&quot;third&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 4 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstOpponentPosition(&quot;fourth&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;elseif opponentShipNum == 5 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;placeFirstOpponentPosition(&quot;fifth&quot;,x,y)
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;end)

&#9;&#9;end
&#9;end

&#9;while playerSettingUpShips or opponentSettingUpShips do

&#9;&#9;wait(1)

&#9;end

&#9;-- set up ships is done, time to play!

&#9;playerGui.MainFrame.SetupShipFrame.Visible = false
&#9;playerGui.MainFrame.InfoFrame.Visible = true
&#9;opponentGui.MainFrame.SetupShipFrame.Visible = false
&#9;opponentGui.MainFrame.InfoFrame.Visible = true

&#9;updatePlayerSalvoGui()
&#9;updateOpponentSalvoGui()


&#9;for x = 1, 11 do
&#9;&#9;for y = 1, 9 do

&#9;&#9;&#9;playerStrikeBoard[x][y] = 0
&#9;&#9;
&#9;&#9;&#9;local stringer = tostring(x) .. tostring(y)

&#9;&#9;&#9;opponentGui.MainFrame.StrikeBoard[tonumber(stringer)].MouseEnter:connect(function()
&#9;&#9;&#9;&#9;opponentGui.MainFrame.StrikeBoard[tonumber(stringer)].Image = &quot;http://www.mulrbx.com/asset/?id=26637811&quot;
&#9;&#9;&#9;end)
&#9;&#9;&#9;opponentGui.MainFrame.StrikeBoard[tonumber(stringer)].MouseLeave:connect(function()
&#9;&#9;&#9;&#9;opponentGui.MainFrame.StrikeBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;end)

&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[tonumber(stringer)].MouseEnter:connect(function()
&#9;&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[tonumber(stringer)].Image = &quot;http://www.mulrbx.com/asset/?id=26637811&quot;
&#9;&#9;&#9;end)
&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[tonumber(stringer)].MouseLeave:connect(function()
&#9;&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;end)

&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[tonumber(stringer)].MouseEnter:connect(function()
&#9;&#9;&#9;&#9;&#9;playerGui.MainFrame.ShipBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[tonumber(stringer)].MouseEnter:connect(function()
&#9;&#9;&#9;&#9;&#9;opponentGui.MainFrame.ShipBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[stringer].MouseButton1Down:connect(function()

&#9;&#9;&#9;&#9;if playerStrikeBoard[x][y] == 0 and gameTurn == true then
&#9;&#9;&#9;&#9;&#9;playerPlayPin(x,y)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;end)

&#9;&#9;&#9;opponentGui.MainFrame.StrikeBoard[stringer].MouseButton1Down:connect(function()

&#9;&#9;&#9;&#9;if opponentStrikeBoard[x][y] == 0 and gameTurn == false then
&#9;&#9;&#9;&#9;&#9;opponentPlayPin(x,y)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end

end

function checkPlayerSalvo()

&#9;playerSalvo = 0

&#9;for i = 1,5 do

&#9;&#9;if i == 1 then

&#9;&#9;&#9;for j = 1,2 do
&#9;&#9;&#9;&#9;if playerShipBoard[playerShips[i][j][1]][playerShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;playerSalvo = playerSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 2 then

&#9;&#9;&#9;for j = 1,3 do
&#9;&#9;&#9;&#9;if playerShipBoard[playerShips[i][j][1]][playerShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;playerSalvo = playerSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 3 then

&#9;&#9;&#9;for j = 1,3 do
&#9;&#9;&#9;&#9;if playerShipBoard[playerShips[i][j][1]][playerShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;playerSalvo = playerSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 4 then

&#9;&#9;&#9;for j = 1,4 do
&#9;&#9;&#9;&#9;if playerShipBoard[playerShips[i][j][1]][playerShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;playerSalvo = playerSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 5 then

&#9;&#9;&#9;for j = 1,5 do
&#9;&#9;&#9;&#9;if playerShipBoard[playerShips[i][j][1]][playerShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;playerSalvo = playerSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;end

&#9;end

&#9;local playerShipsSunk = 5 - playerSalvo
&#9;opponentGui.MainFrame.InfoFrame.ShipsSunk.TXT.Text = playerShipsSunk

&#9;

end

function checkOpponentSalvo()

&#9;opponentSalvo = 0

&#9;for i = 1,5 do

&#9;&#9;if i == 1 then

&#9;&#9;&#9;for j = 1,2 do
&#9;&#9;&#9;&#9;if opponentShipBoard[opponentShips[i][j][1]][opponentShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;opponentSalvo = opponentSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 2 then

&#9;&#9;&#9;for j = 1,3 do
&#9;&#9;&#9;&#9;if opponentShipBoard[opponentShips[i][j][1]][opponentShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;opponentSalvo = opponentSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 3 then

&#9;&#9;&#9;for j = 1,3 do
&#9;&#9;&#9;&#9;if opponentShipBoard[opponentShips[i][j][1]][opponentShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;opponentSalvo = opponentSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 4 then

&#9;&#9;&#9;for j = 1,4 do
&#9;&#9;&#9;&#9;if opponentShipBoard[opponentShips[i][j][1]][opponentShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;opponentSalvo = opponentSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;elseif i == 5 then

&#9;&#9;&#9;for j = 1,5 do
&#9;&#9;&#9;&#9;if opponentShipBoard[opponentShips[i][j][1]][opponentShips[i][j][2]] == 1 then
&#9;&#9;&#9;&#9;&#9;opponentSalvo = opponentSalvo + 1
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;end

&#9;end

&#9;local opponentShipsSunk = 5 - opponentSalvo
&#9;playerGui.MainFrame.InfoFrame.ShipsSunk.TXT.Text = opponentShipsSunk

end

function playerPlayPin(x,y)

&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;pc.Visible = true
&#9;pc.ZIndex = 70

&#9;if opponentShipBoard[x][y] == 1 then

&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26614617&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.StrikeBoard
&#9;&#9;playerStrikeBoard[x][y] = 2
&#9;&#9;opponentShipBoard[x][y] = 2

&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;sound = math.random(1,2)
&#9;&#9;script.Parent.Handle.Yeehaw:Play()
&#9;&#9;if sound == 1 then
&#9;&#9;&#9;opHead.Shot:Play()
&#9;&#9;else
&#9;&#9;&#9;opHead.ShotTwo:Play()
&#9;&#9;end

&#9;&#9;local second = pc:clone()
&#9;&#9;second.Parent = opponentGui.MainFrame.ShipBoard

&#9;elseif opponentShipBoard[x][y] == 0 then
&#9;&#9;
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26614787&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.StrikeBoard
&#9;&#9;playerStrikeBoard[x][y] = 1
&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;local second = pc:clone()
&#9;&#9;second.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;opHead.Miss:Play()
&#9;&#9;script.Parent.Handle.Miss:Play()
&#9;end

&#9;playerSalvo = playerSalvo - 1
&#9;updatePlayerSalvoGui()
&#9;if playerSalvo &lt; 1 then
&#9;&#9;gameTurn = false
&#9;end

end

function opponentPlayPin(x,y)

&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;pc.Visible = true
&#9;pc.ZIndex = 70

&#9;if playerShipBoard[x][y] == 1 then

&#9;&#9;opponentStrikeBoard[x][y] = 2
&#9;&#9;playerShipBoard[x][y] = 2
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26614617&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.StrikeBoard

&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;sound = math.random(1,2)
&#9;&#9;opHead.Yeehaw:Play()
&#9;&#9;if sound == 1 then
&#9;&#9;&#9;script.Parent.Handle.Shot:Play()
&#9;&#9;else
&#9;&#9;&#9;script.Parent.Handle.ShotTwo:Play()
&#9;&#9;end

&#9;&#9;local second = pc:clone()
&#9;&#9;second.Parent = playerGui.MainFrame.ShipBoard

&#9;elseif playerShipBoard[x][y] == 0 then

&#9;&#9;opponentStrikeBoard[x][y] = 1
&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26614787&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.StrikeBoard
&#9;&#9;local second = pc:clone()
&#9;&#9;second.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;script.Parent.Handle.Miss:play()
&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;opHead.Miss:Play()
&#9;end
&#9;opponentSalvo = opponentSalvo - 1
&#9;updateOpponentSalvoGui()
&#9;if opponentSalvo &lt; 1 then
&#9;&#9;gameTurn = true
&#9;end
end

function placeFirstPlayerPosition(name,x,y)

&#9;if playerShipBoard[x][y]  == 0 then

&#9;&#9;playerLastClick[1] = x
&#9;&#9;playerLastClick[2] = y
&#9;&#9;local pc = playerGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637827&quot;
&#9;&#9;pc.Parent = playerGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;&#9;pc.Visible = true
&#9;&#9;pc.ZIndex = 50
&#9;&#9;pc.Name = name .. tostring(x) .. tostring(y)
&#9;&#9;playerShipBoard[x][y] = 1
&#9;&#9;if name == &quot;first&quot; then
&#9;&#9;&#9;findValidPlayerPlaces(x,y,5)
&#9;&#9;elseif name == &quot;second&quot; then
&#9;&#9;&#9;findValidPlayerPlaces(x,y,4)
&#9;&#9;elseif name == &quot;third&quot; then
&#9;&#9;&#9;findValidPlayerPlaces(x,y,3)
&#9;&#9;elseif name == &quot;fourth&quot; then
&#9;&#9;&#9;findValidPlayerPlaces(x,y,3)
&#9;&#9;elseif name == &quot;fifth&quot; then
&#9;&#9;&#9;findValidPlayerPlaces(x,y,2)
&#9;&#9;end
&#9;end

end


function placeFirstOpponentPosition(name,x,y)

&#9;if opponentShipBoard[x][y]  == 0 then

&#9;&#9;opponentLastClick[1] = x
&#9;&#9;opponentLastClick[2] = y
&#9;&#9;local pc = opponentGui.MainFrame.BoardPiece:clone()
&#9;&#9;pc.Image = &quot;http://www.mulrbx.com/asset/?id=26637827&quot;
&#9;&#9;pc.Parent = opponentGui.MainFrame.ShipBoard
&#9;&#9;pc.Size = UDim2.new(0,32,0,28.5)
&#9;&#9;pc.Position = UDim2.new(0,2 + 32*(x-1), 0, 28.5*(y -1))
&#9;&#9;pc.Visible = true
&#9;&#9;pc.ZIndex = 50
&#9;&#9;pc.Name = name .. tostring(x) .. tostring(y)
&#9;&#9;opponentShipBoard[x][y] = 1
&#9;&#9;if name == &quot;first&quot; then
&#9;&#9;&#9;findValidOpponentPlaces(x,y,5)
&#9;&#9;elseif name == &quot;second&quot; then
&#9;&#9;&#9;findValidOpponentPlaces(x,y,4)
&#9;&#9;elseif name == &quot;third&quot; then
&#9;&#9;&#9;findValidOpponentPlaces(x,y,3)
&#9;&#9;elseif name == &quot;fourth&quot; then
&#9;&#9;&#9;findValidOpponentPlaces(x,y,3)
&#9;&#9;elseif name == &quot;fifth&quot; then
&#9;&#9;&#9;findValidOpponentPlaces(x,y,2)
&#9;&#9;end
&#9;end

end

function updatePlayerSalvoGui()

&#9;if gameTurn == true then
&#9;&#9;if playerSalvo == 5 then
&#9;&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951651&quot;
&#9;&#9;elseif playerSalvo == 4 then
&#9;&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951705&quot;
&#9;&#9;elseif playerSalvo == 3 then
&#9;&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951739&quot;
&#9;&#9;elseif playerSalvo == 2 then
&#9;&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951769&quot;
&#9;&#9;elseif playerSalvo == 1 then
&#9;&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951816&quot;
&#9;&#9;elseif playerSalvo == 0 then
&#9;&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
&#9;&#9;end
&#9;else
&#9;&#9;playerGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
&#9;end
end

function updateOpponentSalvoGui()

&#9;if gameTurn == false then
&#9;&#9;if opponentSalvo == 5 then
&#9;&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951651&quot;
&#9;&#9;elseif opponentSalvo == 4 then
&#9;&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951705&quot;
&#9;&#9;elseif opponentSalvo == 3 then
&#9;&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951739&quot;
&#9;&#9;elseif opponentSalvo == 2 then
&#9;&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951769&quot;
&#9;&#9;elseif opponentSalvo == 1 then
&#9;&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26951816&quot;
&#9;&#9;elseif opponentSalvo == 0 then
&#9;&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
&#9;&#9;end
&#9;else
&#9;&#9;opponentGui.MainFrame.InfoFrame.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
&#9;end
end

function playGame()
&#9;--== create a new board for the player (reusing old one causes some rendering bugs with the x and o images)
&#9;createPlayerGui()
&#9;--==set up the opponent&apos;s gui connections (the player&apos;s are setup on tool selection)
&#9;setupOpponentBoard()
&#9;--==hide the player&apos;s sideframe
&#9;Spawn(function()
&#9;&#9;for i = 0, -128, -4 do
&#9;&#9;&#9;playerGui.SideFrame.Position = UDim2.new(0, i, 0.5, -16)
&#9;&#9;&#9;wait()
&#9;&#9;end&#9;
&#9;end)
&#9;--==set turn and gamestate
&#9;local gameRunning = true
&#9;gameTurn = true
&#9;gameState = 2
&#9;--reset the board, and the player&apos;s board gui
&#9;for x = 1,11 do
&#9;&#9;for y = 1, 9 do
&#9;&#9;&#9;stringer = tostring(x) .. tostring(y)
&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;playerGui.MainFrame.StrikeBoard[tonumber(stringer)].Image = &quot;&quot;
&#9;&#9;&#9;opponentStrikeBoard[x][y] = 0
&#9;&#9;&#9;opponentShipBoard[x][y] = 0
&#9;&#9;&#9;playerShipBoard[x][y] = 0
&#9;&#9;&#9;playerStrikeBoard[x][y] = 0
&#9;&#9;end
&#9;end
&#9;playerSettingUpShips = true
&#9;opponentSettingUpShips = true
&#9;playerShipNum = 1
&#9;opponentShipNum = 1
&#9;playerSalvo = 5
&#9;opponentSalvo = 5
&#9;--==connection for if the opponent leaves
&#9;local opponentLeftSignal = game.Players.ChildRemoved:connect(function(p)
&#9;&#9;if p == opponent then
&#9;&#9;&#9;gameState = 3
&#9;&#9;&#9;playerGui.MainFrame.Visible = false
&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;Opponent has left&quot;
&#9;&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;end
&#9;end)
&#9;--==connection to put back the gui if the opponent dies
&#9;local opponentDiedSignal = opponent.Changed:connect(function(property)
&#9;&#9;if property == &quot;Character&quot; then
&#9;&#9;&#9;--clean up connections to opponent
&#9;--&#9;&#9;opponentLeftSignal:disconnect()
&#9;&#9;--&#9;opponentDiedSignal:disconnect()
&#9;&#9;&#9;--clean up opponentcleanup
&#9;&#9;&#9;opponentCleanupScript:remove()
&#9;&#9;&#9;--clean up guis
&#9;&#9;&#9;opponentGui:remove()
&#9;&#9;&#9;opponentGui = nil
&#9;&#9;&#9;print(&quot;removed opp gui&quot;)

&#9;&#9;--[[&#9;if opponent ~= nil then
&#9;&#9;&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;&#9;&#9;if opHead ~= nil then
&#9;&#9;&#9;&#9;&#9;opHead.Shot:remove()
&#9;&#9;&#9;&#9;&#9;opHead.ShotTwo:remove()
&#9;&#9;&#9;&#9;&#9;opHead.Yeehaw:remove()
&#9;&#9;&#9;&#9;&#9;opHead.Miss:remove()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end]]
&#9;&#9;&#9;playerGui:remove()
&#9;&#9;&#9;playerGui = nil
&#9;&#9;&#9;print(&quot;removed player gui&quot;)
&#9;&#9;end
&#9;end)

&#9;--==player died, panic and trash the game
&#9;local playerDiedSignal = player.Character.Humanoid.Died:connect(function()
&#9;&#9;--clean up connections to opponent
&#9;&#9;opponentLeftSignal:disconnect()
&#9;&#9;opponentDiedSignal:disconnect()
&#9;&#9;--clean up opponentcleanup
&#9;&#9;opponentCleanupScript:remove()
&#9;&#9;--clean up guis
&#9;&#9;opponentGui:remove()
&#9;&#9;opponentGui = nil

&#9;&#9;if opponent ~= nil then
&#9;&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;&#9;if opHead ~= nil then
&#9;&#9;&#9;&#9;opHead.Shot:remove()
&#9;&#9;&#9;&#9;opHead.ShotTwo:remove()
&#9;&#9;&#9;&#9;opHead.Yeehaw:remove()
&#9;&#9;&#9;&#9;opHead.Miss:remove()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;--player&apos;s is going to get cleaned up right anyways, TODO : maybe show a popup message
&#9;&#9;playerGui:remove()
&#9;&#9;playerGui = nil
&#9;end)
&#9;--==&quot;quit&quot; button pressed connections
&#9;local playerQuitSignal = playerGui.MainFrame.InfoFrame.BN_Quit.MouseButton1Down:connect(function()
&#9;&#9;playerGui.MainFrame.Visible = false
&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;You have quit the game&quot;
&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;--
&#9;&#9;opponentGui.MainFrame.Visible = false
&#9;&#9;opponentGui.PopupFrame.TXT.Text = player.Name..&quot; has quit, you win!&quot;
&#9;&#9;opponentGui.PopupFrame.Visible = true&#9;&#9;
&#9;&#9;--
&#9;&#9;gameRunning = false
&#9;&#9;gameTurn = not gameTurn

&#9;&#9;if opponent ~= nil then
&#9;&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;&#9;if opHead ~= nil then
&#9;&#9;&#9;&#9;opHead.Shot:remove()
&#9;&#9;&#9;&#9;opHead.ShotTwo:remove()
&#9;&#9;&#9;&#9;opHead.Yeehaw:remove()
&#9;&#9;&#9;&#9;opHead.Miss:remove()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;local opponentQuitSignal = opponentGui.MainFrame.InfoFrame.BN_Quit.MouseButton1Down:connect(function()
&#9;&#9;playerGui.MainFrame.Visible = false
&#9;&#9;playerGui.PopupFrame.TXT.Text = opponent.Name..&quot; has quit, you win!&quot;
&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;--
&#9;&#9;opponentGui:remove()
&#9;&#9;opponentGui = nil
&#9;&#9;--
&#9;&#9;gameRunning = false
&#9;&#9;gameTurn = not gameTurn
&#9;&#9;
&#9;&#9;if opponent ~= nil then
&#9;&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;&#9;if opponent.Head ~= nil then
&#9;&#9;&#9;&#9;opHead.Shot:remove()
&#9;&#9;&#9;&#9;opHead.ShotTwo:remove()
&#9;&#9;&#9;&#9;opHead.Yeehaw:remove()
&#9;&#9;&#9;&#9;opHead.Miss:remove()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;--
&#9;
&#9;local piframe = playerGui.MainFrame.InfoFrame
&#9;playerGui.MainFrame.Visible = true
&#9;piframe.Visible = false
&#9;piframe.Opponent.TXT.Text = opponent.Name
&#9;piframe.Turn.TXT.Text = &quot;Your turn&quot;
&#9;piframe.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26647196&quot;
&#9;local oiframe = opponentGui.MainFrame.InfoFrame
&#9;opponentGui.MainFrame.Visible = true
&#9;oiframe.Visible = false
&#9;oiframe.Opponent.TXT.Text = player.Name
&#9;oiframe.Turn.TXT.Text = &quot;Opponent&apos;s turn&quot;
&#9;oiframe.Turn.TurnImage.Image = &quot;http://www.mulrbx.com/asset/?id=26647234&quot;

&#9;playerGui.MainFrame.SetupShipFrame.Visible = true
&#9;playerGui.MainFrame.InfoFrame.Visible = false
&#9;opponentGui.MainFrame.SetupShipFrame.Visible = true
&#9;opponentGui.MainFrame.InfoFrame.Visible = false

&#9;setupShips()
&#9;--==enter the main gameloop
&#9;while gameRunning do
&#9;&#9;--wait for the spinlock, for a player to make a move
&#9;&#9;local tmp = gameTurn
&#9;&#9;while gameTurn == tmp do
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;if not gameRunning then
&#9;&#9;&#9;break
&#9;&#9;end
&#9;&#9;--change turn displays
&#9;&#9;if gameTurn then
&#9;&#9;&#9;piframe.Turn.TXT.Text = &quot;Your turn&quot;
&#9;&#9;&#9;oiframe.Turn.TXT.Text = &quot;Opponent&apos;s turn&quot;
&#9;&#9;else
&#9;&#9;&#9;piframe.Turn.TXT.Text = &quot;Opponent&apos;s turn&quot;
&#9;&#9;&#9;oiframe.Turn.TXT.Text = &quot;Your turn&quot;
&#9;&#9;end
&#9;&#9;--check for a win
&#9;&#9;if hasWon(1) then
&#9;&#9;&#9;--playerGui.MainFrame.Visible = false
&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;You have won!&quot;
&#9;&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;&#9;--
&#9;&#9;&#9;--opponentGui.MainFrame.Visible = false
&#9;&#9;&#9;opponentGui.PopupFrame.TXT.Text = &quot;You have lost =(&quot;
&#9;&#9;&#9;opponentGui.PopupFrame.Visible = true
&#9;&#9;&#9;--
&#9;&#9;&#9;break
&#9;&#9;elseif hasWon(2) then
&#9;&#9;&#9;--playerGui.MainFrame.Visible = false
&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;You have lost =(&quot;
&#9;&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;&#9;--
&#9;&#9;&#9;--opponentGui.MainFrame.Visible = false
&#9;&#9;&#9;opponentGui.PopupFrame.TXT.Text = &quot;You have won!&quot;
&#9;&#9;&#9;opponentGui.PopupFrame.Visible = true&#9;
&#9;&#9;&#9;--
&#9;&#9;&#9;break&#9;&#9;&#9;
&#9;&#9;end
&#9;&#9;checkPlayerSalvo()
&#9;&#9;checkOpponentSalvo()
&#9;&#9;updatePlayerSalvoGui()
&#9;&#9;updateOpponentSalvoGui()
&#9;end
&#9;--==disconnect the signals made
&#9;opponentDiedSignal:disconnect()
&#9;opponentLeftSignal:disconnect()
&#9;playerQuitSignal:disconnect()
&#9;opponentQuitSignal:disconnect()
&#9;--==set the gamestate to gameover message pending
&#9;gameState = 3
end

script.Parent.Equipped:connect(function()
&#9;print(&quot;BattleWagons Equipped&quot;)
&#9;gameState = 0
&#9;gameTurn = true
&#9;player = game.Players:playerFromCharacter(script.Parent.Parent)
&#9;--listen for a player clicked notification sent from the localscript
&#9;opponentChangedSignal = script.Parent.Opponent.Changed:connect(function()
&#9;&#9;--was set to nil, ignore change
&#9;&#9;if not script.Parent.Opponent.Value then 
&#9;&#9;&#9;print(&quot;Opponent value set back to nil&quot;) 
&#9;&#9;&#9;return 
&#9;&#9;end
&#9;&#9;print(&quot;Clicked an opponent&quot;)
&#9;&#9;--if there&apos;s no game, challenge this player
&#9;&#9;if gameState == 0 then
&#9;&#9;&#9;print(&quot;Starting game&quot;)
&#9;&#9;&#9;--if they&apos;re allready playing tictactoe then return
&#9;&#9;&#9;if script.Parent.Opponent.Value.PlayerGui:FindFirstChild(&quot;BattleshipGui&quot;) then 
&#9;&#9;&#9;&#9;print(&quot;Opponent is allready playing a game&quot;)
&#9;&#9;&#9;&#9;if script.Parent.Opponent.Value.Character:FindFirstChild(script.Parent.Name) then
&#9;&#9;&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;Player is already playing a game&quot;
&#9;&#9;&#9;&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;Player is already playing a game&quot;
&#9;&#9;&#9;&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;&#9;script.Parent.Opponent.Value = nil
&#9;&#9;&#9;&#9;return 
&#9;&#9;&#9;end
&#9;&#9;&#9;if (script.Parent.Opponent.Value.Character.Torso.Position - player.Character.Torso.Position).magnitude &gt; 16 then
&#9;&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;Player is too far away&quot;
&#9;&#9;&#9;&#9;playerGui.PopupFrame.Visible = true
&#9;&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;&#9;script.Parent.Opponent.Value = nil
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;--set the gamestate
&#9;&#9;&#9;gameState = 1
&#9;&#9;&#9;opponent = script.Parent.Opponent.Value
&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;script.Parent.Opponent.Value = nil
&#9;&#9;&#9;--set up the opponent&apos;s GUI
&#9;&#9;&#9;opponentGui = resourceGui:clone()
&#9;&#9;&#9;opponentGui.AcceptFrame.Visible = true
&#9;&#9;&#9;opponentGui.AcceptFrame.TXT.Text = player.Name..&quot; wants to play BattleWagons with you!&quot;
&#9;&#9;&#9;--==set up the opponent&apos;s cleanup if this player leaves
&#9;&#9;&#9;opponentCleanupScript = script.Parent.Connect4_OpponentCleanup:clone()
&#9;&#9;&#9;opponentCleanupScript.Challenger.Value = player
&#9;&#9;&#9;opponentCleanupScript.Cleanup.Value = opponentGui
&#9;&#9;&#9;opponentCleanupScript.Disabled = false
&#9;&#9;&#9;--should I put it straight in workspace or is that considered namespace pollution? that will work for now at least
&#9;&#9;&#9;opponentCleanupScript.Parent = game.Workspace
&#9;&#9;&#9;--on accept
&#9;&#9;&#9;opponentGui.AcceptFrame.Accept.MouseButton1Down:connect(function()
&#9;&#9;&#9;&#9;opponentGui.AcceptFrame.Visible = false
&#9;&#9;&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;&#9;&#9;if opHead ~= nil then
&#9;&#9;&#9;&#9;&#9;local shotOne = script.Parent.Handle.Shot:clone()
&#9;&#9;&#9;&#9;&#9;shotOne.Parent = opHead
&#9;&#9;&#9;&#9;&#9;local shotTwoer = script.Parent.Handle.ShotTwo:clone()
&#9;&#9;&#9;&#9;&#9;shotTwoer.Parent = opHead
&#9;&#9;&#9;&#9;&#9;local yee = script.Parent.Handle.Yeehaw:clone()
&#9;&#9;&#9;&#9;&#9;yee.Parent = opHead
&#9;&#9;&#9;&#9;&#9;local miss = script.Parent.Handle.Miss:clone()
&#9;&#9;&#9;&#9;&#9;miss.Parent = opHead
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;playGame()
&#9;&#9;&#9;end)
&#9;&#9;&#9;--on decline
&#9;&#9;&#9;opponentGui.AcceptFrame.Decline.MouseButton1Down:connect(function()
&#9;&#9;&#9;&#9;--reset player&apos;s sideframes&apos; text
&#9;&#9;&#9;&#9;playerGui.SideFrame.TXT1.Text = &quot;Click on a player to&quot;
&#9;&#9;&#9;&#9;playerGui.SideFrame.TXT2.Text = &quot;challenge them&quot;
&#9;&#9;&#9;&#9;--show me a popup stating player declined
&#9;&#9;&#9;&#9;playerGui.PopupFrame.TXT.Text = &quot;Opponent Declined =(&quot;
&#9;&#9;&#9;&#9;playerGui.PopupFrame.Visible = true&#9;
&#9;&#9;&#9;&#9;--reset the game state
&#9;&#9;&#9;&#9;gameState = 0
&#9;&#9;&#9;&#9;--remove opponent gui
&#9;&#9;&#9;&#9;opponentGui:remove()
&#9;&#9;&#9;&#9;opponentGui = nil
&#9;&#9;&#9;&#9;--remove opponent cleanup script
&#9;&#9;&#9;&#9;opponentCleanupScript:remove()
&#9;&#9;&#9;&#9;opponentCleanupScript = nil
&#9;&#9;&#9;end)
&#9;&#9;&#9;--hide popup on OK pressed
&#9;&#9;&#9;opponentGui.PopupFrame.Accept.MouseButton1Down:connect(function()
&#9;&#9;&#9;&#9;--only called on game waiting for over, delete this gui and &quot;this player left&quot; script if it exists
&#9;&#9;&#9;&#9;if opponentCleanupScript then
&#9;&#9;&#9;&#9;&#9;opponentCleanupScript:remove()
&#9;&#9;&#9;&#9;&#9;opponentCleanupScript = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;opponentGui:remove()
&#9;&#9;&#9;&#9;opponentGui = nil
&#9;&#9;&#9;end)
&#9;&#9;&#9;--gui set up, add it
&#9;&#9;&#9;opponentGui.Parent = opponent.PlayerGui
&#9;&#9;&#9;--set the player&apos;s GUI
&#9;&#9;&#9;playerGui.SideFrame.TXT1.Text = &quot;Sending Challenge&quot;
&#9;&#9;&#9;playerGui.SideFrame.TXT2.Text = &quot;Please wait...&quot;
&#9;&#9;else
&#9;&#9;&#9;print(&quot;Game allready started&quot;)
&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;script.Parent.Opponent.Value = nil
&#9;&#9;end
&#9;end)
&#9;--create the player&apos;s gui
&#9;createPlayerGui()
&#9;--pretty effects, scroll out the side frame
&#9;for i = -128, 0, 4 do
&#9;&#9;playerGui.SideFrame.Position = UDim2.new(0, i, 0.5, -16)
&#9;&#9;wait()
&#9;end
&#9;print(&quot;BattleWagons finished setup&quot;)
end)

function doCleanUp()
&#9;--clean up the guis if they exist
&#9;if opponentGui then
&#9;&#9;opponentGui:remove()
&#9;&#9;opponentGui = nil
&#9;end
&#9;if playerGui then
&#9;&#9;playerGui:remove()
&#9;&#9;playerGui = nil
&#9;end&#9;
&#9;
&#9;--remove the connection to opponentchanged
&#9;opponentChangedSignal:disconnect()

&#9;playerSettingUpShips = true
&#9;opponentSettingUpShips = true
&#9;playerShipNum = 1
&#9;opponentShipNum = 1

&#9;if opponent ~= nil then
&#9;&#9;local opHead = opponent.Character.Head
&#9;&#9;if opHead ~= nil then
&#9;&#9;&#9;opHead.Shot:remove()
&#9;&#9;&#9;opHead.ShotTwo:remove()
&#9;&#9;&#9;opHead.Yeehaw:remove()
&#9;&#9;&#9;opHead.Miss:remove()
&#9;&#9;end
&#9;end
end

script.Parent.Unequipped:connect(function()
&#9;print(&quot;Tool unequipped, clean up...&quot;)
&#9;doCleanUp()
&#9;--TODO: send some friendly notification to a possible
&#9;--opponent that the player exited the map or deselected
&#9;--the tool. As the player will have exited a separate
&#9;--script is required for this
end)






</ProtectedString>
			</Properties>
		</Item>
		<Item class="ObjectValue" referent="RBX11">
			<Properties>
				<string name="Name">Opponent</string>
				<Ref name="Value">null</Ref>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX12">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Connect4_LocalMain</string>
				<ProtectedString name="Source">local clicks = 0
local con = nil

script.Parent.Equipped:connect(function(mouse)
&#9;script.Name = &quot;TicTac_LocalMain_Selected&quot;
&#9;--when clicked look for an opponent
&#9;con = mouse.Button1Down:connect(function()
&#9;&#9;--check for a humanoid
&#9;&#9;--OR hack for quick elimination of possible &quot;no mouse.Target&quot; condition
&#9;&#9;local humanoid = (mouse.Target or game.Workspace).Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if (humanoid) then
&#9;&#9;&#9;local torso = humanoid.Parent:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;if torso then
&#9;&#9;&#9;&#9;if humanoid then
&#9;&#9;&#9;&#9;&#9;--check if the humanoid belongs to a player
&#9;&#9;&#9;&#9;&#9;local player = game.Players:playerFromCharacter(humanoid.Parent)
&#9;&#9;&#9;&#9;&#9;if player then
&#9;&#9;&#9;&#9;&#9;&#9;--replicate the opponent value to the server sided script
&#9;&#9;&#9;&#9;&#9;&#9;script.Parent.Opponent.Value = player
&#9;&#9;&#9;&#9;&#9;&#9;--
&#9;&#9;&#9;&#9;&#9;&#9;clicks = clicks + 1
&#9;&#9;&#9;&#9;&#9;&#9;script.Name = tostring(clicks)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
end)

script.Parent.Unequipped:connect(function()
&#9;if con then
&#9;&#9;con:disconnect()
&#9;&#9;con = nil
&#9;end
&#9;script.Name = &quot;TicTac_LocalMain_NotSelected&quot;
end)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="GuiMain" referent="RBX13">
			<Properties>
				<string name="Name">BattleshipGui</string>
			</Properties>
			<Item class="Frame" referent="RBX14">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4294967295</Color3>
					<float name="BackgroundTransparency">0.5</float>
					<Color3 name="BorderColor3">4279308561</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<string name="Name">MainFrame</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-190</XO>
						<YS>0.219999999</YS>
						<YO>-142</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>360</XO>
						<YS>0</YS>
						<YO>550</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX15">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4279308561</Color3>
						<float name="BackgroundTransparency">0.699999988</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">StrikeBoard</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>2</XO>
							<YS>0</YS>
							<YO>26</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>356</XO>
							<YS>0</YS>
							<YO>256</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX16">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.mulrbx.com/asset/?id=26333159</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">BKG</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX17">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TitleBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Battle Wagons</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX18">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">InfoFrame</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>369</XO>
							<YS>0</YS>
							<YO>180</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>230</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX19">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Opponent</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-6</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX20">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967086</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279308561</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">Header</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Opponent :</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX21">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279308561</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">TXT</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">None</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX22">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Turn</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>0</YS>
								<YO>75</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-6</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX23">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967086</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279308561</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">Header</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Turn :</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX24">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279308561</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">TXT</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Yours</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX25">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><null></null></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">TurnImage</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>35</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>70</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX26">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4294933759</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279308561</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><null></null></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">BN_Quit</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>0</YS>
								<YO>200</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-6</XO>
								<YS>0</YS>
								<YO>24</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX27">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">Text</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Quit Game</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX28">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ShipsSunk</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-6</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX29">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967086</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279308561</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">Header</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Opp. Ships Sunk</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX30">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279308561</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<string name="Name">TXT</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>16</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">0</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ImageLabel" referent="RBX31">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><null></null></Content>
						<Color3 name="ImageColor3">4294967295</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<string name="Name">BoardPiece</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>32</XO>
							<YS>0</YS>
							<YO>32</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX32">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4279308561</Color3>
						<float name="BackgroundTransparency">0.699999988</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ShipBoard</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>2</XO>
							<YS>0</YS>
							<YO>290</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>356</XO>
							<YS>0</YS>
							<YO>256</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX33">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.mulrbx.com/asset/?id=26333159</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">BKG</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX34">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SetupShipFrame</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>-190</XO>
							<YS>0</YS>
							<YO>310</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>180</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX35">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">0</token>
							<string name="Name">Status</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Prepare your BattleWagons!</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX36">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4294967295</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">4279308561</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<string name="Name">SideFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0.5</YS>
						<YO>-16</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>128</XO>
						<YS>0</YS>
						<YO>32</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX37">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TXT1</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Click on a player to</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX38">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TXT2</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">challenge them</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX39">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4294967295</Color3>
					<float name="BackgroundTransparency">0.300000012</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<string name="Name">AcceptFrame</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-128</XO>
						<YS>0.5</YS>
						<YO>-50</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>256</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX40">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TitleBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Battle Wagons Challenge</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX41">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TXT</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>16</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">[player] wants to play Battle Wagons with you!</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="ImageButton" referent="RBX42">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><null></null></Content>
						<Color3 name="ImageColor3">4294967295</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Modal">false</bool>
						<string name="Name">Accept</string>
						<UDim2 name="Position">
							<XS>0.100000001</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-24</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>16</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX43">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279308561</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">0</token>
							<string name="Name">TXT</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Accept</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ImageButton" referent="RBX44">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><null></null></Content>
						<Color3 name="ImageColor3">4294967295</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Modal">false</bool>
						<string name="Name">Decline</string>
						<UDim2 name="Position">
							<XS>0.600000024</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-24</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>16</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX45">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279308561</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">0</token>
							<string name="Name">TXT</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Decline</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX46">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4294967295</Color3>
					<float name="BackgroundTransparency">0.300000012</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<string name="Name">PopupFrame</string>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>-128</XO>
						<YS>0.5</YS>
						<YO>-50</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>256</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">10</int>
				</Properties>
				<Item class="TextLabel" referent="RBX47">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TitleBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Battle Wagons</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">10</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX48">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279308561</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">0</token>
						<string name="Name">TXT</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>24</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>16</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">[message]</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">10</int>
					</Properties>
				</Item>
				<Item class="ImageButton" referent="RBX49">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><null></null></Content>
						<Color3 name="ImageColor3">4294967295</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Modal">false</bool>
						<string name="Name">Accept</string>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-24</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0.400000006</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>16</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="TextLabel" referent="RBX50">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279308561</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">0</token>
							<string name="Name">TXT</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">OK</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX7A98A89654E049FF939DAA6DBAC3AC7E">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-250.949722</X>
					<Y>14.7727966</Y>
					<Z>-243.266953</Z>
					<R00>-0.835466862</R00>
					<R01>0.164885789</R01>
					<R02>0.524221182</R02>
					<R10>-0</R10>
					<R11>0.953925788</R11>
					<R12>-0.300042778</R12>
					<R20>-0.549540937</R20>
					<R21>-0.250675797</R21>
					<R22>-0.796973288</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-253.088623</X>
					<Y>15.997016</Y>
					<Z>-240.015182</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>