<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.mulrbx.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXFD5B17E824BE490CA6519B63EE85F055">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-1.125</Y>
				<Z>0</Z>
				<R00>0.968355119</R00>
				<R01>-0</R01>
				<R02>-0.249576092</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>-0</R12>
				<R20>0.249576062</R20>
				<R21>0</R21>
				<R22>0.968355238</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">SkullBasher</string>
			<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=200904119</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX675361B70751402786F04FD38170EC40">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>9</Y>
					<Z>0</Z>
					<R00>0.68301183</R00>
					<R01>0.707107246</R01>
					<R02>0.183012202</R02>
					<R10>-0.592752397</R10>
					<R11>0.683011532</R11>
					<R12>-0.426777065</R12>
					<R20>-0.426776856</R20>
					<R21>0.183012784</R21>
					<R22>0.885644913</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.75</X>
					<Y>3.5</Y>
					<Z>0.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX98F08F69ABA8458BBEE61EB1BA59D443">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.mulrbx.com/asset/?id=200904214</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=200904088</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX700B7BBD071E403FA6B461B93B99082F">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset?id=186936370</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3FB324CA356242409F5DC5AE0C942510">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing1</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset?id=169310429</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX24990E4CFA8943EB9ABA29AAE2EC9C25">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing2</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset?id=169310436</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX47B8FF70830246BBAD4D6613A62549DB">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing3</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset?id=169310447</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX8D6E1863720F4ACCAA654F0457B3463B">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing4</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset?id=169310455</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX0835DF7EDCD04E00AF65898D064020DA">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=203672003</url></Content>
				<string name="Name">Bash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX93E549C0BBDA45CF8AB964AB923E88C2">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=203673369</url></Content>
				<string name="Name">TwoHandBash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX0792FBADE8B44D2E976CBA0F85021385">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=203674301</url></Content>
				<string name="Name">HoldBash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXE22D7AEF7CD84326B5A5AE4B47B89268">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=203675078</url></Content>
				<string name="Name">ReleaseHoldAndBash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX6CA2D79E234742568DB24307950324D7">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=203733184</url></Content>
				<string name="Name">StrongBash</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX674232D56B2C4381933273FB38FD1C5B">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXB763B7EAB1B142C29857306553B53388">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetMouseIcon&quot; and Value then
&#9;&#9;PlayerMouse.Icon = Value
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent and ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;elseif Mode == &quot;GetProperty&quot; then
&#9;&#9;local PropertyValue = nil
&#9;&#9;pcall(function()
&#9;&#9;&#9;PropertyValue = Value.Object[Value.Property]
&#9;&#9;end)
&#9;&#9;return PropertyValue
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.WheelForward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = true})
&#9;end)
&#9;Mouse.WheelBackward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;PlayerMouse.Icon = &quot;&quot;
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXF8F6CEA0D07E46C69205AB319249D9E3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

CameraShake = script:WaitForChild(&quot;CameraShake&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
&#9;Bash = {Animation = Tool:WaitForChild(&quot;Bash&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 0.5, Damage = {Min = 10, Max = 15}},
&#9;TwoHandBash = {Animation = Tool:WaitForChild(&quot;TwoHandBash&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 0.5, Damage = {Min = 20, Max = 25}},
&#9;HoldBash = {Animation = Tool:WaitForChild(&quot;HoldBash&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;StrongBash = {Animation = Tool:WaitForChild(&quot;StrongBash&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 0.5, Damage = {Min = 25, Max = 35}},
&#9;ReleaseHoldAndBash = {Animation = Tool:WaitForChild(&quot;ReleaseHoldAndBash&quot;), FadeTime = nil, Weight = nil, Speed = 4, Duration = 0.5, Damage = {Min = 30, Max = 40}}
}

Sounds = {
&#9;Swing1 = Handle:WaitForChild(&quot;Swing1&quot;),
&#9;Swing2 = Handle:WaitForChild(&quot;Swing2&quot;),
&#9;Swing3 = Handle:WaitForChild(&quot;Swing3&quot;),
&#9;Swing4 = Handle:WaitForChild(&quot;Swing4&quot;),
&#9;Hit = Handle:WaitForChild(&quot;Hit&quot;),
}

TouchDamage = {Min = 5, Max = 8}

ToolEquipped = false
MouseDown = false

Clicks = 0
FirstClick = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player then
&#9;&#9;if Mode == &quot;MouseClick&quot; then
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if Down and not MouseDown then
&#9;&#9;&#9;&#9;MouseDown = true
&#9;&#9;&#9;&#9;Activated()
&#9;&#9;&#9;elseif not Down and MouseDown then
&#9;&#9;&#9;&#9;MouseDown = false
&#9;&#9;&#9;&#9;if CurrentAnimation == Animations.HoldBash then
&#9;&#9;&#9;&#9;&#9;Humanoid.WalkSpeed = 0
&#9;&#9;&#9;&#9;&#9;local AttackSounds = {Sounds.Swing1, Sounds.Swing2, Sounds.Swing3, Sounds.Swing4}
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.HoldBash)
&#9;&#9;&#9;&#9;&#9;local AttackAnims = {Animations.ReleaseHoldAndBash, Animations.StrongBash}
&#9;&#9;&#9;&#9;&#9;Attack(AttackAnims, AttackSounds)
&#9;&#9;&#9;&#9;&#9;Humanoid.WalkSpeed = 16
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function SpinHead(character)
&#9;if not character or character:FindFirstChild(&quot;SpinningHead&quot;) then
&#9;&#9;return
&#9;end
&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;if not torso then
&#9;&#9;return
&#9;end
&#9;local neck = torso:FindFirstChild(&quot;Neck&quot;)
&#9;if not neck then
&#9;&#9;return
&#9;end
&#9;local CameraShakeClone
&#9;if player then
&#9;&#9;local PlayerGui = player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;&#9;if PlayerGui then
&#9;&#9;&#9;CameraShakeClone = CameraShake:Clone()
&#9;&#9;&#9;local Duration = Instance.new(&quot;NumberValue&quot;)
&#9;&#9;&#9;Duration.Name = &quot;Duration&quot;
&#9;&#9;&#9;Duration.Value = 2
&#9;&#9;&#9;Duration.Parent = CameraShakeClone
&#9;&#9;&#9;CameraShakeClone.Disabled = false
&#9;&#9;&#9;Debris:AddItem(CameraShakeClone, 3)
&#9;&#9;&#9;CameraShakeClone.Parent = PlayerGui&#9;&#9;
&#9;&#9;end
&#9;end
&#9;local SpinningHead = Instance.new(&quot;StringValue&quot;)
&#9;SpinningHead.Name = &quot;SpinningHead&quot;
&#9;Debris:AddItem(SpinningHead, 3)
&#9;SpinningHead.Parent = character
&#9;local Frames = 16
&#9;for i = 1, Frames do
&#9;&#9;neck.C1 = neck.C1 * CFrame.Angles(0, 0, ((math.pi * 2) / Frames))
&#9;&#9;wait()
&#9;end
&#9;neck.C1 = CFrame.new(0, -0.5, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
&#9;for i, v in pairs({SpinningHead, CameraShakeClone}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Blow(Hit)
&#9;if not Hit or not Hit.Parent or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local character = Hit.Parent
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if character == Character or not humanoid or humanoid.Health == 0 then
&#9;&#9;return
&#9;end
&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;if not RightArm then
&#9;&#9;return
&#9;end
&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
&#9;&#9;return
&#9;end
&#9;
&#9;if CurrentAnimation and CurrentAnimation ~= Animations.HoldBash then
&#9;&#9;Sounds.Hit:Play()
&#9;end
&#9;
&#9;if CurrentAnimation == Animations.TwoHandBash then
&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;if torso then
&#9;&#9;&#9;torso.Velocity = CFrame.new(Torso.Position, torso.Position).lookVector * 10
&#9;&#9;&#9;humanoid.Sit = true
&#9;&#9;end
&#9;elseif CurrentAnimation == Animations.Bash then
&#9;&#9;SpinHead(character)
&#9;elseif CurrentAnimation == Animations.StrongBash or CurrentAnimation == Animations.TwoHandBash then
&#9;end
&#9;&#9;
&#9;UntagHumanoid(humanoid)
&#9;TagHumanoid(humanoid, Player)
&#9;
&#9;local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or TouchDamage)
&#9;local DamageAmount = math.random(DamageValue.Min, DamageValue.Max)
&#9;
&#9;humanoid:TakeDamage(DamageAmount)
&#9;
&#9;if humanoid.Health == 0 then
&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;if head then
&#9;&#9;&#9;for i, v in pairs(head:GetChildren()) do
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;end
&#9;&#9;&#9;local Skull = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;Skull.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;Skull.MeshId = &quot;http://www.mulrbx.com/asset/?id=4770583&quot;
&#9;&#9;&#9;Skull.TextureId = &quot;http://www.mulrbx.com/asset/?id=4770560&quot;
&#9;&#9;&#9;Skull.Scale = Vector3.new(3.2, 3.2, 3.2)
&#9;&#9;&#9;Skull.VertexColor = Vector3.new(1, 1, 1)
&#9;&#9;&#9;Skull.Parent = head
&#9;&#9;end
&#9;end
&#9;
end

function Attack(PossibleAnims, PossibleSounds)
&#9;if PossibleAnims and #PossibleAnims &gt; 0 then
&#9;&#9;if PossibleSounds and #PossibleSounds &gt; 0 then
&#9;&#9;&#9;PossibleSounds[math.random(1, #PossibleSounds)]:Play()
&#9;&#9;end 
&#9;&#9;CurrentAnimation = PossibleAnims[math.random(1, #PossibleAnims)]
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, CurrentAnimation)
&#9;&#9;if CurrentAnimation.Duration and CurrentAnimation.Duration &gt; 0 then
&#9;&#9;&#9;wait(CurrentAnimation.Duration)
&#9;&#9;&#9;CurrentAnimation = nil
&#9;&#9;end
&#9;end
end

function Activated()
&#9;if not Tool.Enabled or not ToolEquipped then
&#9;&#9;return
&#9;end
&#9;Clicks = (Clicks + 1)
&#9;if not FirstClick then
&#9;&#9;FirstClick = true
&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;end)
&#9;&#9;wait(0.15)
&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;end
&#9;&#9;if not CurrentlyEquipped then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Tool.Enabled = false
&#9;&#9;local AttackAnims = {}
&#9;&#9;local AttackSounds = {}
&#9;&#9;if MouseDown and Clicks == 1 then
&#9;&#9;&#9;AttackAnims = {Animations.HoldBash}
&#9;&#9;else
&#9;&#9;&#9;AttackSounds = {Sounds.Swing1, Sounds.Swing2, Sounds.Swing3, Sounds.Swing4}
&#9;&#9;&#9;if Clicks == 1 then
&#9;&#9;&#9;&#9;AttackAnims = {Animations.Bash}
&#9;&#9;&#9;elseif Clicks &gt; 1 then
&#9;&#9;&#9;&#9;AttackAnims = {Animations.TwoHandBash}
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if Clicks &gt; 1 then
&#9;&#9;&#9;Humanoid.WalkSpeed = 0
&#9;&#9;end
&#9;&#9;Attack(AttackAnims, AttackSounds)
&#9;&#9;Humanoid.WalkSpeed = 16
&#9;&#9;FirstClick = false
&#9;&#9;Clicks = 0
&#9;&#9;Tool.Enabled = true
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local CurrentlyEquipped = true
&#9;EquippedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;if EquippedToolUnequipped then
&#9;&#9;EquippedToolUnequipped:disconnect()
&#9;end
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;ToolEquipped = true
&#9;Spawn(function()
&#9;&#9;local RightArm = Character:WaitForChild(&quot;Right Arm&quot;)
&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = RightArm, Transparency = 0, AutoUpdate = false})
&#9;&#9;end
&#9;end)
end

function Unequipped()
&#9;Clicks = 0
&#9;FirstClick = false
&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;Humanoid.WalkSpeed = 16
&#9;end
&#9;for i, v in pairs({EquippedToolUnequipped, ToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;ToolEquipped = false
end

Handle.Touched:connect(Blow)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBX60D2D8AD3CC749788BD987E8CDAEDF4B">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CameraShake</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Debris = game:GetService(&quot;Debris&quot;)

Duration = script:WaitForChild(&quot;Duration&quot;)

while Duration and Duration.Parent and Duration.Value &gt; 0 do
&#9;local CameraRotation = Camera.CoordinateFrame - Camera.CoordinateFrame.p
&#9;local CameraScroll = (Camera.CoordinateFrame.p - Camera.Focus.p).magnitude
&#9;local NewCFrame = CFrame.new(Camera.Focus.p) * CameraRotation * CFrame.fromEulerAnglesXYZ((math.random(-10, 10) / 40), (math.random(-10, 10) / 40), 0)
&#9;Camera.CoordinateFrame = NewCFrame * CFrame.new(0, 0, CameraScroll)
&#9;Duration.Value = (Duration.Value - 0.1)
&#9;wait(0.1)
end

Debris:AddItem(script, 1)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX8B185E278407491D90439A07E4210546">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.0621091574</X>
					<Y>9.54319</Y>
					<Z>-2.2735548</Z>
					<R00>-0.999921858</R00>
					<R01>0.00293478137</R01>
					<R02>-0.0121537484</R02>
					<R10>-0</R10>
					<R11>0.972061813</R11>
					<R12>0.234724998</R12>
					<R20>0.0125030624</R20>
					<R21>0.234706655</R21>
					<R22>-0.971985817</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.0444861799</X>
					<Y>9.20283794</Y>
					<Z>-0.864171982</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>