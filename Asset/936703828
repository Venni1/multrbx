<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.mulrbx.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX1A32D5A5FEC041EC8641C551CAB87898">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.25</Y>
				<Z>0.75</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">LancesGun</string>
			<bool name="RequiresHandle">true</bool>
			<BinaryString name="Tags"></BinaryString>
			<Content name="TextureId"><url>rbxassetid://936683000</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX8059C7E8287F4883818F37D443CF905C">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>1.49998736</X>
					<Y>1.2500124</Y>
					<Z>-14.5499992</Z>
					<R00>1</R00>
					<R01>-1.04171681e-06</R01>
					<R02>-1.24148858e-06</R02>
					<R10>9.24828096e-12</R10>
					<R11>0.766053081</R11>
					<R12>-0.642777979</R12>
					<R20>1.62063645e-06</R20>
					<R21>0.642777979</R21>
					<R22>0.766053081</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.450001717</X>
					<Y>1</Y>
					<Z>3.34999895</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX7A395E6267EE4DA9A6E8F7ED8D0B91AC">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://936683797</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureId"><url>rbxassetid://936683315</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Attachment" referent="RBX878C54A055094F1E97FA771BE606FB3D">
				<Properties>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0.100000001</Y>
						<Z>-1.67499948</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>5.96046448e-08</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-5.96046448e-08</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">BarrelAttachment</string>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
				</Properties>
			</Item>
			<Item class="Attachment" referent="RBXE9C35985CA1B4DB28EEEED35B057CBAF">
				<Properties>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>-0.25</Y>
						<Z>0.75</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>6.31088724e-30</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-6.31088724e-30</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">RightGripAttachment</string>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">false</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX3A0BA23E22B64E0A989C530D0ACC68C9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid">{CAE2E2F1-B391-4FCD-8C5B-0C8F233E21C5}</string>
				<ProtectedString name="Source"><![CDATA[Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

Tool:GetPropertyChangedSignal("Enabled"):Connect(UpdateIcon)
Tool.Equipped:connect(OnEquipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX293D6CFC8B884C268A00447CAF5BDB9B">
			<Properties>
				<string name="Name">Remotes</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="RemoteFunction" referent="RBX1959D7B525A846E4A7493A0E20E7C5EE">
				<Properties>
					<string name="Name">ServerControl</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXD2C461377D17424894C372EEA8CC2AC6">
				<Properties>
					<string name="Name">ClientControl</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX6773B4AB7B014CFD98A3CCF13F600B38">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid">{2783FD2C-97EC-4706-BA95-3479D06A79A8}</string>
				<ProtectedString name="Source"><![CDATA[Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}

ServerControl = Tool.Remotes:WaitForChild("ServerControl")
ClientControl = Tool.Remotes:WaitForChild("ClientControl")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("ImageButton")
InputButton.Name = "InputButton"
InputButton.Image = ""
InputButton.BackgroundTransparency = 1
InputButton.ImageTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Mouse
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
	end)
end

function Unequipped()
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXE022D4A15F474C479A071887DFDD2839">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{72A90687-0975-4E7C-A2EA-181F4D4A536A}</string>
				<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local TweenService = game:GetService("TweenService")

local Tool = script.Parent
local Handle = Tool:WaitForChild("Handle")
local BarrelAttachment = Handle:FindFirstChildOfClass("Attachment")
local Functions = require(script:WaitForChild("Functions"))

local Character = nil
local Player = nil 
local Humanoid = nil
local RootPart = nil

local BASE_URL = "rbxassetid://"

local BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

local Configuration = {
	Accuracy = Vector3.new(0.1, 0.1, 0.1),
	Damage = {Min = 20, Max = 35},
	FireRate = 1.5,
	Range = 125,
	FadeRate = 1.25,
	MaxCharge = 2,
}

local ServerControl = Tool.Remotes:FindFirstChild("ServerControl") or Instance.new("RemoteFunction")
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool.Remotes

local ClientControl = Tool.Remotes:FindFirstChild("ClientControl") or Instance.new("RemoteFunction")
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool.Remotes

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and RootPart and RootPart.Parent) and true) or false)
end

function LaserTouched(hit)
	if not hit or not hit.Parent then
		return
	end
	local character = hit.Parent
	if character:IsA("Accessory") then
		character = character.Parent
	end
	if character == Character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
	if not humanoid or humanoid.Health == 0 or not torso then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and Functions.IsTeamMate(Player, player) then
		return
	end
	local DeterminedDamage = math.random(Configuration.Damage.Min, Configuration.Damage.Max)
	local HealthAfter = (humanoid.Health - DeterminedDamage)
	Functions.UntagHumanoid(humanoid)
	Functions.TagHumanoid(humanoid, Player)
	humanoid:TakeDamage(DeterminedDamage)
end

function FireLaser(startPosition, endPosition)
	local Direction = CFrame.new(RootPart.Position, endPosition).lookVector
	local RayHit, RayPos, RayNormal = Functions.CastRay(RootPart.Position, Direction, Configuration.Range, {Character}, false)	
	local RayLength = (startPosition - RayPos).Magnitude
	Direction = CFrame.new(startPosition, endPosition)
	
	local Laser = BasePart:Clone()
	local FadeDuration = Configuration.FadeRate
	Laser.Name = "Laser"
	Laser.Material = Enum.Material.Neon
	Laser.Size = Vector3.new(0.2, RayLength, 0.2)
	Laser.Color = Color3.fromRGB(19, 203, 204)
	Laser.CFrame = (Direction * CFrame.new(0, 0, -(RayLength * 0.5)) * CFrame.Angles((math.pi * 0.5), 0, 0))
	Laser.Anchored = true
	Laser.CanCollide = false 
	Debris:AddItem(Laser, FadeDuration)
	Laser.Parent = workspace
	LaserTouched(RayHit)
end

function Fire()
	local TargetPosition = InvokeClient("MousePosition")
	if not TargetPosition then
		Tool.Enabled = true
		return
	end
	
	local StartPosition = BarrelAttachment.WorldPosition
	
	TargetPosition = TargetPosition.Position
	local Accuracy = Configuration.Accuracy * 100
	TargetPosition = TargetPosition + Vector3.new((math.random(-Accuracy.X, Accuracy.X) * 0.01), (math.random(-Accuracy.Y, Accuracy.Y) * 0.01), (math.random(-Accuracy.Z, Accuracy.Z) * 0.01))
	FireLaser(StartPosition, TargetPosition)	
	
	wait(Configuration.FireRate)
	Tool.Enabled = true 
end

function Activated()
	if not Tool.Enabled then return end 
	Tool.Enabled = false 
	Fire()
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChildOfClass("Humanoid")
	RootPart = Character:FindFirstChild("HumanoidRootPart")
end

function Unequipped()
	Player = nil
	Character = nil
	Humanoid = nil
	RootPart = nil
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, mode, value)
	if player ~= Player or not Tool.Enabled or not CheckIfAlive() or not mode or not value then
		return
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXB4B186B912DE42F78EA1E1CF2C9AD994">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<string name="ScriptGuid">{031B12F1-6DFA-4B70-91BF-EC89E89F09C7}</string>
					<ProtectedString name="Source"><![CDATA[Debris = game:GetService("Debris")

ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}

Functions = {
	
	FindCharacterAncestor = (function(Object)
		if Object and Object ~= game:GetService("Workspace") then
			local Humanoid = Object:FindFirstChild("Humanoid")
			if Humanoid then
				return Object, Humanoid
			else
				return Functions.FindCharacterAncestor(Object.Parent)
			end
		end
		return nil
	end),

	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),
	
	CheckIntangible = (function(Hit)
		if Hit and Hit.Parent then
			if Functions.CheckTableForString(ProjectileNames, Hit.Name) then
				return true
			end
			local ObjectParent = Hit.Parent
			local Character = ObjectParent.Parent
			local Humanoid = Character:FindFirstChild("Humanoid")
			if Humanoid and Humanoid.Health > 0 and ObjectParent:IsA("Accessory") then
				return true
			end
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit)
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		if RayHit and Functions.CheckIntangible(RayHit) then
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
		end
		return RayHit, RayPos, RayNormal
	end),
	
	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),
	
	TagHumanoid = (function(humanoid, player)
		local CreatorTag = Instance.new("ObjectValue")
		CreatorTag.Name = "creator"
		CreatorTag.Value = player

		Debris:AddItem(CreatorTag, 2)
		CreatorTag.Parent = humanoid
	end),
	
	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),
	
	Clamp = (function(Number, Min, Max)
		return math.max(math.min(Max, Number), Min)
	end),
	
	GetPercentage = (function(Start, End, Number)
		return (((Number - Start) / (End - Start)) * 100)
	end),
	
	Round = (function(Number, RoundDecimal)
		local WholeNumber, Decimal = math.modf(Number)
		return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
	end),
	
}

return Functions]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="Keyframe" referent="RBX05169A98C12B41C1864065FC33455F50">
			<Properties>
				<string name="Name">ThumbnailPose</string>
				<BinaryString name="Tags"></BinaryString>
				<float name="Time">0</float>
			</Properties>
			<Item class="Pose" referent="RBXDB84E2A095C84D619FE0E7BA9325DBB7">
				<Properties>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<token name="EasingDirection">1</token>
					<token name="EasingStyle">0</token>
					<float name="MaskWeight">0</float>
					<string name="Name">UpperTorso</string>
					<BinaryString name="Tags"></BinaryString>
					<float name="Weight">0</float>
				</Properties>
				<Item class="Pose" referent="RBXB2D14235C2AE40A0B6726E2A345EBA64">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-6.70552254e-08</Y>
							<Z>-5.96046448e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0.173648193</R11>
							<R12>-0.98480773</R12>
							<R20>0</R20>
							<R21>0.98480773</R21>
							<R22>0.173648193</R22>
						</CoordinateFrame>
						<token name="EasingDirection">1</token>
						<token name="EasingStyle">0</token>
						<float name="MaskWeight">0</float>
						<string name="Name">RightUpperArm</string>
						<BinaryString name="Tags"></BinaryString>
						<float name="Weight">1</float>
					</Properties>
					<Item class="Pose" referent="RBX8E6695D46882475E8753B10D0CA98FF6">
						<Properties>
							<CoordinateFrame name="CFrame">
								<X>0</X>
								<Y>-1.49011612e-08</Y>
								<Z>3.7252903e-09</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0.98480773</R11>
								<R12>-0.173648179</R12>
								<R20>0</R20>
								<R21>0.173648179</R21>
								<R22>0.98480773</R22>
							</CoordinateFrame>
							<token name="EasingDirection">1</token>
							<token name="EasingStyle">0</token>
							<float name="MaskWeight">0</float>
							<string name="Name">RightLowerArm</string>
							<BinaryString name="Tags"></BinaryString>
							<float name="Weight">1</float>
						</Properties>
						<Item class="Pose" referent="RBX73EAA61E7012467AACDB50C772309A67">
							<Properties>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">1</token>
								<token name="EasingStyle">0</token>
								<float name="MaskWeight">0</float>
								<string name="Name">RightHand</string>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX80D25D4C743B41DEACDBEF1EA6811C19">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>6.58398104</X>
					<Y>1.78721189</Y>
					<Z>-14.1369352</Z>
					<R00>0.0842524618</R00>
					<R01>-0.0752237216</R01>
					<R02>0.993600965</R02>
					<R10>-0</R10>
					<R11>0.997146428</R11>
					<R12>0.0754921362</R12>
					<R20>-0.996444464</R20>
					<R21>-0.00636039814</R21>
					<R22>0.0840120316</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-13.2880383</X>
					<Y>0.277369142</Y>
					<Z>-15.8171759</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
</roblox>