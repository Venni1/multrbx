<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.mulrbx.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX6BB3C253DA1E4487A1221D42F2F32E15">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.0500000007</X>
				<Y>-0.150000006</Y>
				<Z>0.100000001</Z>
				<R00>0.613900721</R00>
				<R01>0.145039022</R01>
				<R02>0.775944352</R02>
				<R10>-0.027069971</R10>
				<R11>0.986265421</R11>
				<R12>-0.162935242</R12>
				<R20>-0.788918972</R20>
				<R21>0.0790212676</R21>
				<R22>0.609395206</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">BloxiliciousBubbleGum</string>
			<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=11878696</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXA94CCB0349B94FFD89AEBD7EF87CCF9C">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1002</int>
				<CoordinateFrame name="CFrame">
					<X>3.92064905</X>
					<Y>3.60001373</Y>
					<Z>-1.7647109</Z>
					<R00>0.707106471</R00>
					<R01>-0.707106531</R01>
					<R02>-7.99567346e-008</R02>
					<R10>0.707106531</R10>
					<R11>0.707106471</R11>
					<R12>-2.04410782e-008</R12>
					<R20>7.09919732e-008</R20>
					<R21>-4.20839541e-008</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1.20000005</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX75B62850235B46DFB4F505DAFACD0BBF">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.mulrbx.com/asset/?id=11878259</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.20000005</X>
						<Y>1.20000005</Y>
						<Z>1.20000005</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=11878228</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX87EE8CC19960448DB81F71B9958D1E21">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">OpenSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=10721950</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX252E2EFBA3104295AAFB6179660728E6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">InflateSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=11895499</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX08B8B497F01B4150B476391C64DB842A">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">PopSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=11895500</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX4434D0FF9E4E4E67A1B9EC4B8729EF01">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BloxiliciousGum</string>
				<ProtectedString name="Source"><![CDATA[--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Grips = {
	TakeStick = CFrame.new(1.25, -0.5, 0.200000003, 0.971011043, 0.239034176, 0.000580094696, -0.156055406, 0.632090449, 0.759018004, 0.181064576, -0.737105429, 0.651069343),
	RestoreStick = CFrame.new(0.0500000007, -0.150000006, 0.100000001, 0.613900721, 0.145039022, 0.775944352, -0.027069971, 0.986265421, -0.162935242, -0.788918972, 0.0790212676, 0.609395206),
}

Sounds = {
	OpenSound = Handle:WaitForChild("OpenSound"),
	InflateSound = Handle:WaitForChild("InflateSound"),
	PopSound = Handle:WaitForChild("PopSound"),
}

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

BaseBubble = BasePart:Clone()
BaseBubble.Name = "Effect"
BaseBubble.Transparency = 0.3
BaseBubble.BrickColor = BrickColor.new("Pink")
BaseBubble.Size = Vector3.new(1, 1, 1)
BaseBubble.CanCollide = false
BubbleMesh = Instance.new("SpecialMesh")
BubbleMesh.MeshType = Enum.MeshType.Sphere
BubbleMesh.Parent = BaseBubble

MouseDown = false
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Tool.Grip = Grips.RestoreStick
Tool.Enabled = true

function BlowBubble(head)
	if not head or not head.Parent then
		return
	end
	if not Bubble or not Bubble.Parent then
		Bubble = BaseBubble:Clone()
		BodyPosition = Instance.new("BodyPosition")
		BodyPosition.maxForce = Vector3.new(1e8, 1e8, 1e8)
		BodyPosition.position = Bubble.Position
		BodyPosition.Parent = Bubble
		Bubble.CFrame = CFrame.new(head.Position + (head.CFrame.lookVector * (0.6 +  (Bubble.Mesh.Scale.X * 0.5))))
		Bubble.Parent = Tool
	end
	local DesiredPosition = (head.Position + (head.CFrame.lookVector * (0.6 +  (Bubble.Mesh.Scale.X * 0.5))))
	if BodyPosition and BodyPosition.Parent then
		BodyPosition.position = DesiredPosition
	end
	Bubble.Mesh.Scale = (Bubble.Mesh.Scale + Vector3.new(0.1, 0.1, 0.1))
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Sounds.OpenSound:Play()
end

function Unequipped()
	ToolEquipped = false
	for i, v in pairs(Sounds) do
		v:Stop()
	end
	MouseDown = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
	if Mode == "Button1Click" then
		local Down = Value.Down
		if Down and not MouseDown and Tool.Enabled then
			MouseDown = true
			Spawn(function()
				Tool.Enabled = false
			
				MouseDown = true
			
				Tool.Grip = Grips.TakeStick
				wait(0.5)
				Sounds.InflateSound:Play()
				
				Tool.Grip = Grips.RestoreStick
			
				local Rate = 0.05
				local Duration = 2
				local StartTime = tick()
				while MouseDown and ToolEquipped and CheckIfAlive() and (tick() - StartTime) < Duration do
					BlowBubble(Head)
					wait(Rate)
				end
				if Bubble and Bubble.Parent then
					Debris:AddItem(Bubble, 0)
					Bubble:Destroy()
				end
				Sounds.InflateSound:Stop()
				if CheckIfAlive() then
					local PopSound = Sounds.PopSound:Clone()
					Debris:AddItem(PopSound, 1.5)
					PopSound.Parent = Head
					PopSound:Play()
				end
				
				wait(1)
				
				Tool.Enabled = true
			end)
		elseif not Down and MouseDown then
			MouseDown = false
		end
	end
end)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXBD1D0C6EBC994BD892E853A848CD9E15">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("ImageButton")
InputButton.Name = "InputButton"
InputButton.Image = ""
InputButton.BackgroundTransparency = 1
InputButton.ImageTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
	end)
end

function Unequipped()
	LocalObjects = {}
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX98EF29B159F247479E4067D24204D370">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.89564753</X>
					<Y>3.65604496</Y>
					<Z>-2.81362128</Z>
					<R00>-0.999975801</R00>
					<R01>0.000194525986</R01>
					<R02>-0.00696476037</R02>
					<R10>-0</R10>
					<R11>0.999610305</R11>
					<R12>0.0279191453</R12>
					<R20>0.00696747657</R20>
					<R21>0.0279184692</R21>
					<R22>-0.999585986</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>3.91006923</X>
					<Y>3.5982337</Y>
					<Z>-0.743811369</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>