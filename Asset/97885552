<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.mulrbx.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXC2FD4A9BCDCD4418921BD161201E9F6F">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.11854057</X>
				<Y>-0.324489176</Y>
				<Z>-0.167293906</Z>
				<R00>0.838204503</R00>
				<R01>0.00302543584</R01>
				<R02>0.545347452</R02>
				<R10>0.0426681004</R10>
				<R11>0.996555448</R11>
				<R12>-0.0711098462</R12>
				<R20>-0.543684244</R20>
				<R21>0.0828735679</R21>
				<R22>0.83518827</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">Mauser .96</string>
			<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=97899275</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXE0360C2C5E6349A693CFD2CB98879487">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>18.9789352</X>
					<Y>4.12693024</Y>
					<Z>-9.74905491</Z>
					<R00>-0.988080323</R00>
					<R01>-0.0971804708</R01>
					<R02>-0.119387314</R02>
					<R10>0.00191195076</R10>
					<R11>0.767740011</R11>
					<R12>-0.640758634</R12>
					<R20>0.153927743</R20>
					<R21>-0.633349359</R21>
					<R22>-0.758403003</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.510000467</X>
					<Y>1.18000245</Y>
					<Z>1.34999704</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXC0E93A8BCDA54CBDA2C13F661B7FFD5E">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.mulrbx.com/asset/?id=97889473</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.70000005</X>
						<Y>1.70000005</Y>
						<Z>1.70000005</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.mulrbx.com/asset/?id=97892879</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXBC4F4463A38140A0BD54830DF52E53B5">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">0.929174185</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=97852331</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB4E17D748F284E85A8F418C285E471D6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Reload</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.mulrbx.com/asset/?id=97852355</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXBECAF64035C24BFB9CD1630F7937694D">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/id=97898138</url></Content>
				<string name="Name">Fire</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX39D435BBE3C34DFAA09007975A98A1BA">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=97898532</url></Content>
				<string name="Name">Idle</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX2E4312E4EAB542BEB9628B9A1CC8D298">
			<Properties>
				<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=97900365</url></Content>
				<string name="Name">Reload</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX52085B626D0D4FC1ABB6E940933F8235">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>17.0680485</X>
					<Y>4.12239504</Y>
					<Z>-9.58502007</Z>
					<R00>0.0855277255</R00>
					<R01>-0.00235597976</R01>
					<R02>-0.996333003</R02>
					<R10>-0</R10>
					<R11>0.999997199</R11>
					<R12>-0.00236464432</R12>
					<R20>0.996335804</R20>
					<R21>0.000202242649</R21>
					<R22>0.0855274796</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>18.9789352</X>
					<Y>4.12693024</Y>
					<Z>-9.74905491</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXDD87949F8BC04FF6BC2FCACA07A84ADA">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Firescript</string>
				<ProtectedString name="Source">--Rescripted by Luckymaxer
--Made by Stickmasterluke
 --edited by fusroblox

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

AmmoHud = script:WaitForChild(&quot;AmmoHud&quot;)
 
BaseUrl = &quot;http://www.mulrbx.com/asset/?id=&quot;

Modules = Tool:WaitForChild(&quot;Modules&quot;)
Configuration = require(Modules:WaitForChild(&quot;Configuration&quot;))
Objects = require(Modules:WaitForChild(&quot;Templates&quot;))
Content = require(Modules:WaitForChild(&quot;Content&quot;))
Functions = require(Modules:WaitForChild(&quot;Functions&quot;))

Variables = {
&#9;Ammo = Configuration.ClipSize,
&#9;Equipped = false,
&#9;MouseDown = false,
&#9;Initalized = false,
&#9;Reloading = false,
&#9;Check = true,
&#9;ReloadCounter = 0,
}

Animations = {
&#9;Fire = {Animation = Tool:WaitForChild(&quot;Fire&quot;), FadeTime = 0, Weight = 1, Speed = 3, Duration = nil},
&#9;Reload = {Animation = Tool:WaitForChild(&quot;Reload&quot;), FadeTime = 0, Weight = 1, Speed = 2, Duration = 3.5},
&#9;Idle = {Animation = Tool:WaitForChild(&quot;Idle&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
}

Sounds = {
&#9;Fire = Handle:WaitForChild(&quot;Fire&quot;),
&#9;Reload = Handle:WaitForChild(&quot;Reload&quot;)
}

Events = {}
GuiEvents = {}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

function CanFire()
&#9;return (((Variables.MouseDown and Variables.Equipped and CheckIfAlive() and not Variables.Reloading and Variables.Check) and true) or false)
end

function Events:Fire()
&#9;if not Variables.MouseDown or not CanFire() then
&#9;&#9;return
&#9;end
&#9;while CanFire() do
&#9;&#9;Variables.Check = false
&#9;&#9;local StartPosition = (Handle.CFrame * Configuration.BarrelPosition).p
&#9;&#9;local TargetPosition = InvokeClient(&quot;MousePosition&quot;).Position
&#9;&#9;Spawn(function()
&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Fire)
&#9;&#9;&#9;Events:SendBullet(StartPosition, TargetPosition, Configuration.Spread, Configuration.SegmentLength, Character, Configuration.Colors[1], Configuration.GunDamage, Configuration.FadeDelayTime)
&#9;&#9;end)
&#9;&#9;if not CanFire() then
&#9;&#9;&#9;break
&#9;&#9;else
&#9;&#9;&#9;wait(Configuration.FireRate)
&#9;&#9;&#9;Variables.Check = true
&#9;&#9;&#9;if not Configuration.Automatic then
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if not Variables.Check then
&#9;&#9;wait(Configuration.FireRate)
&#9;&#9;Variables.Check = true
&#9;end
end

function Events:Reload()
&#9;Variables.Reloading = true
&#9;Tool.Enabled = false
&#9;Spawn(function()
&#9;&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;&#9;RightGrip = nil
&#9;&#9;if RightArm then
&#9;&#9;&#9;RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;&#9;&#9;if RightGrip then
&#9;&#9;&#9;&#9;RightGrip.Part1 = nil
&#9;&#9;&#9;&#9;RightGrip.Parent = nil
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if ChestWeld and ChestWeld.Parent then
&#9;&#9;&#9;ChestWeld:Destroy()
&#9;&#9;end
&#9;&#9;ChestWeld = Functions.WeldBetween(Torso, Handle)
&#9;&#9;local Animation = Animations.Reload
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Reload)
&#9;&#9;wait(Animation.Duration)
&#9;&#9;if ChestWeld and ChestWeld.Parent then
&#9;&#9;&#9;ChestWeld:Destroy()
&#9;&#9;end
&#9;&#9;if RightGrip then
&#9;&#9;&#9;RightGrip.Part1 = Handle
&#9;&#9;&#9;RightGrip.Parent = RightArm
&#9;&#9;end
&#9;end)
&#9;if Variables.Clips then
&#9;&#9;if Variables.Clips &gt; 0 then
&#9;&#9;&#9;Variables.Clips = (Variables.Clips - 1)
&#9;&#9;&#9;GuiEvents:UpdateGui()
&#9;&#9;else
&#9;&#9;&#9;Variables.Reloading = false
&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;&#9;return
&#9;&#9;end
&#9;end
&#9;Sounds.Reload:Play()
&#9;for i = 1, Configuration.ClipSize do
&#9;&#9;wait(Configuration.ReloadTime / Configuration.ClipSize)
&#9;&#9;Variables.Ammo = i
&#9;&#9;GuiEvents:UpdateGui()
&#9;end
&#9;Variables.Reloading = false
&#9;Tool.Enabled = true
end

function Events:SpawnShell()
&#9;local shell = Objects.Shell:Clone()
&#9;Debris:AddItem(shell, 2)
&#9;shell.Parent = game:GetService(&quot;Workspace&quot;)
&#9;shell.CFrame = Handle.CFrame
end

function TakeHit(character)
&#9;if not character then
&#9;&#9;return
&#9;end
&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;if not torso then
&#9;&#9;return
&#9;end
&#9;local tvel = Instance.new(&quot;BodyVelocity&quot;)
&#9;tvel.maxForce = Vector3.new(999999, 0, 9999999)
&#9;tvel.velocity = ((torso.CFrame.p - Torso.CFrame.p).unit * 100)
&#9;Debris:AddItem(tvel, 0.5)
&#9;tvel.Parent = torso
end

function Events:SendBullet(StartPosition, EndPosition, Spread, SegmentLength, Ignore, Color, Damage, FadeDelay)
&#9;if Variables.Ammo &lt;= 0 then
&#9;&#9;return
&#9;end
&#9;Variables.Ammo = (Variables.Ammo - 1)
&#9;GuiEvents:UpdateNumbers(tostring(Variables.Ammo), AmmoHudClone.Bar.AmmoLeft)
&#9;Events:SpawnShell()
&#9;Sounds.Fire.Pitch = ((math.random() * 0.5) + 0.75)
&#9;Sounds.Fire:Play()
&#9;local BulletDistance = Configuration.Range
&#9;local ClickDistance = (StartPosition - EndPosition).magnitude
&#9;local EndPosition = (EndPosition + (Vector3.new((math.random() - 0.5), (math.random() - 0.5), (math.random() - 0.5)) * (ClickDistance / 100)))
&#9;local BulletVec = (EndPosition - StartPosition).unit
&#9;local TotalSegments = math.ceil(BulletDistance / SegmentLength)
&#9;local LastPosition = StartPosition
&#9;for i = 1, TotalSegments do
&#9;&#9;local NewPosition = (StartPosition + (BulletVec * (BulletDistance * (i / TotalSegments))))
&#9;&#9;local SegVec = (NewPosition - LastPosition).unit
&#9;&#9;local BulletLength = (NewPosition - LastPosition).magnitude
&#9;&#9;local BulletHit, EndPosition = Functions.CastRay(LastPosition, SegVec, BulletLength, Ignore, false)
&#9;&#9;DrawBeam(LastPosition, EndPosition, Color, FadeDelay, Objects.Bullet)
&#9;&#9;if BulletHit then
&#9;&#9;&#9;local character = BulletHit.Parent
&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;character = character.Parent
&#9;&#9;&#9;end
&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;&#9;if player and Functions.IsTeamMate(Player, player) then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;Functions.UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;Functions.TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;TakeHit(character)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(Damage)
&#9;&#9;&#9;&#9;if character:FindFirstChild(&quot;BlockShot&quot;) then
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;&#9;Events:HitEffect(EndPosition, BrickColor.new(&quot;Medium stone grey&quot;), 5)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;&#9;break
&#9;&#9;end
&#9;&#9;LastPosition = EndPosition
&#9;&#9;wait(Configuration.Rate)
&#9;end
&#9;if Variables.Ammo &lt; 1 then
&#9;&#9;Events:Reload()
&#9;end
end

function Events:MakeSpark(Position, Color)
&#9;local EffectTime = 0.5
&#9;local Effect = Objects.SparkEffect:Clone()
&#9;Effect.BrickColor = Color
&#9;local EffectVel = Instance.new(&quot;BodyVelocity&quot;)
&#9;EffectVel.maxForce = Vector3.new(99999, 99999, 99999)
&#9;EffectVel.velocity = Vector3.new((math.random() * 15 * Functions.SigNum(math.random(-10, 10))), (math.random() * 15 * Functions.SigNum(math.random(-10, 10))), (math.random() * 15 * Functions.SigNum(math.random(-10, 10))))
&#9;EffectVel.Parent = Effect
&#9;Effect.Size = Vector3.new((math.abs(EffectVel.velocity.x) / 30), (math.abs(EffectVel.velocity.y) / 30), (math.abs(EffectVel.velocity.z) / 30))
&#9;Debris:AddItem(EffectVel, wait())
&#9;Debris:AddItem(Effect, EffectTime * 2)
&#9;Effect.Parent = game:GetService(&quot;Workspace&quot;)
&#9;Effect.CFrame = CFrame.new(Position)
&#9;local StartTime = time()
&#9;while time() - StartTime &lt; EffectTime do
&#9;&#9;if Effect ~= nil then
&#9;&#9;&#9;Effect.Transparency = ((time() - StartTime) / EffectTime)
&#9;&#9;end
&#9;&#9;wait()
&#9;end
&#9;if Effect and Effect.Parent then
&#9;&#9;Effect:Destroy()
&#9;end
end

function Events:HitEffect(Position, Color, NumberOfSparks)
&#9;for i = 1, NumberOfSparks, 1 do
&#9;&#9;Spawn(function()
&#9;&#9;&#9;Events:MakeSpark(Position, Color)
&#9;&#9;end)
&#9;end
end

function DrawBeam(BeamStart, BeamEnd, Color, FadeDelay, TemplatePart)
&#9;local Distance = 2 --(BeamStart - BeamEnd).magnitude
&#9;local Laser = TemplatePart:Clone()
&#9;Laser.BrickColor = Color
&#9;Laser.Size = Vector3.new(0.1, 0.1, (Distance + 0.2))
&#9;Debris:AddItem(Laser, FadeDelay)
&#9;Laser.Parent = game:GetService(&quot;Workspace&quot;)
&#9;Laser.CFrame = CFrame.new(((BeamEnd + BeamStart) / 2), BeamStart) * CFrame.new(0, 0, -(Distance / 2))
end

function GuiEvents.LoadGui(Player)
&#9;if not Player then
&#9;&#9;return
&#9;end
&#9;local PlayerGui = Player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;if not PlayerGui then
&#9;&#9;return
&#9;end
&#9;AmmoHudClone = AmmoHud:Clone()
&#9;AmmoHudClone.Parent = PlayerGui
&#9;GuiEvents:UpdateNumbers(tostring(Variables.Ammo), AmmoHudClone.Bar.AmmoLeft)
end

function GuiEvents:UpdateGui()
&#9;if not AmmoHudClone or not AmmoHudClone.Parent then
&#9;&#9;return
&#9;end
&#9;GuiEvents:UpdateNumbers(tostring(Variables.Ammo), AmmoHudClone.Bar.AmmoLeft)
end

function GuiEvents:UpdateNumbers(Data, Frame)
&#9;if not AmmoHudClone or not AmmoHudClone.Parent then
&#9;&#9;return
&#9;end
&#9;local DataLength = string.len(Data)
&#9;Data = ((((DataLength == 0 or DataLength == 1) and &quot;0&quot;) or &quot;&quot;) .. Data)
&#9;local Frame1 = Frame:FindFirstChild(&quot;1&quot;)
&#9;local Frame2 = Frame:FindFirstChild(&quot;2&quot;)
&#9;if not Frame1 or not Frame2 then
&#9;&#9;return
&#9;end
&#9;local Digit1 = Frame1:FindFirstChild(&quot;Digit&quot;)
&#9;local Digit2 = Frame2:FindFirstChild(&quot;Digit&quot;)
&#9;if not Digit1 or not Digit2 then
&#9;&#9;return
&#9;end
&#9;for i, v in pairs({Digit1, Digit2}) do
&#9;&#9;local StringPortion = ((v == Digit1 and string.sub(Data, 1, 1)) or (string.sub(Data, 2, 2)))
&#9;&#9;local NumberImage = Content.NumberImages[tonumber(StringPortion)]
&#9;&#9;if v.Image ~= (BaseUrl .. NumberImage) then
&#9;&#9;&#9;local NewDigit = v:Clone()
&#9;&#9;&#9;NewDigit.Position = UDim2.new(NewDigit.Position.X.Scale, NewDigit.Position.X.Offset, NewDigit.Position.Y.Scale, (NewDigit.Position.Y.Offset - 65))
&#9;&#9;&#9;NewDigit.Image = (BaseUrl .. NumberImage)
&#9;&#9;&#9;NewDigit.Parent = v.Parent
&#9;&#9;&#9;if v == Digit1 then
&#9;&#9;&#9;&#9;NewDigit:TweenPosition(v.Position, &quot;Out&quot;, &quot;Quad&quot;, 0.1)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;NewDigit:TweenPosition(UDim2.new(v.Position.X.Scale, v.Position.X.Offset, v.Position.Y.Scale, 0), &quot;Out&quot;, &quot;Quad&quot;, .25)
&#9;&#9;&#9;end
&#9;&#9;&#9;v.Name = &quot;OldDigit&quot;
&#9;&#9;&#9;v:TweenPosition(UDim2.new(v.Position.X.Scale, v.Position.X.Offset, v.Position.Y.Scale, (v.Position.Y.Offset + 65)), &quot;Out&quot;, &quot;Quad&quot;, 0.25)
&#9;&#9;&#9;Debris:AddItem(v, 1)
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Idle)
&#9;end)
&#9;Spawn(function()
&#9;&#9;GuiEvents.LoadGui(Player)
&#9;end)
&#9;Variables.Equipped = true
end

function Unequipped()
&#9;Variables.Equipped = false
&#9;Variables.MouseDown = false
&#9;RightGrip = nil
&#9;for i, v in pairs(Sounds) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({AmmoHudClone, ChestWeld}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function OnServerInvoke(player, mode, value)
&#9;if player == Player and Variables.Equipped and value and CheckIfAlive() then
&#9;&#9;if mode == &quot;MouseClick&quot; then
&#9;&#9;&#9;local Down = value.Down
&#9;&#9;&#9;Variables.MouseDown = Down
&#9;&#9;&#9;if Variables.MouseDown then
&#9;&#9;&#9;&#9;Events:Fire()
&#9;&#9;&#9;end
&#9;&#9;elseif mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Key = value.Key
&#9;&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;&#9;local Down = value.Key
&#9;&#9;&#9;if Key == &quot;r&quot; and Down then
&#9;&#9;&#9;&#9;if Variables.Equipped and not Variables.MouseDown and not Variables.Reloading and CheckIfAlive() then
&#9;&#9;&#9;&#9;&#9;Events:Reload()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="ScreenGui" referent="RBXA3B5FE9CC19D4892A6B829E51FD650DE">
				<Properties>
					<string name="Name">AmmoHud</string>
				</Properties>
				<Item class="Frame" referent="RBX37CDFA42EF1049D4B92197EEC3935DB1">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Bar</string>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>-200</XO>
							<YS>1</YS>
							<YO>-170</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBXE69D34246C834DDE9BD8BFEF598EEE2C">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">AmmoLeft</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>50</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX1A61A6AD95B545D8A77E2FEE7D7E6814">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">1</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXEA9F5EEE50174328BE920469A53A6471">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94130434</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">ImageLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX7BF5CB9D50D64EB183352A3ED7AD14F7">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94128421</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Digit</string>
									<UDim2 name="Position">
										<XS>0.0500000007</XS>
										<XO>0</XO>
										<YS>0.0500000007</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.899999976</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX1E61FFFF4B1F4189B3BE59ACAB501305">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">2</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-30</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX613313EA6BDE43CA8642D5458ADDAC97">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94130434</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">ImageLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXBDD6CE55AC5F4F2F99232A8F14132299">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94128401</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Digit</string>
									<UDim2 name="Position">
										<XS>0.0500000007</XS>
										<XO>0</XO>
										<YS>0.0500000007</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.899999976</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageLabel" referent="RBXA145F59B3C6C47E1B48B6C5DCFB15530">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94100300</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Slash</string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-20</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX45D5FD47CEAD440090BCBA699DAA9324">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TotalAmmo</string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>50</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX3C535EE5DA4E4F7E8F4C461373101C23">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">1</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX77C504112F9A4F3AA4482937343A07D3">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94130434</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">ImageLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX157E2B120E024B99B776EA3227684E56">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94128421</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Digit</string>
									<UDim2 name="Position">
										<XS>0.0500000007</XS>
										<XO>0</XO>
										<YS>0.0500000007</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.899999976</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX71C18FE87F0145788122BE7A1D568C38">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">2</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-30</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXDF3A31C01C2B4E76A82E0C69DDB1994E">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94130434</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">ImageLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX11575E2D520147DB8C292D6C2D3DC175">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94128401</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Digit</string>
									<UDim2 name="Position">
										<XS>0.0500000007</XS>
										<XO>0</XO>
										<YS>0.0500000007</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.899999976</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageLabel" referent="RBXB1D4346FAF3146BC8345285986277166">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.mulrbx.com/asset/?id=94129782</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">ImageLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX6AA294F86F4342D3A9E01843A555277D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Modules = Tool:WaitForChild(&quot;Modules&quot;)
Configuration = require(Modules:WaitForChild(&quot;Configuration&quot;))
Objects = require(Modules:WaitForChild(&quot;Templates&quot;))
Content = require(Modules:WaitForChild(&quot;Content&quot;))
Functions = require(Modules:WaitForChild(&quot;Functions&quot;))

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ReloadCounter = 0

ToolEquipped = false

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function SetMouseIcon(Mouse)
&#9;if not ToolEquipped then
&#9;&#9;return
&#9;end
&#9;local MouseData = OnClientInvoke(&quot;MousePosition&quot;)
&#9;if not MouseData then
&#9;&#9;return
&#9;end
&#9;local Position = MouseData.Position
&#9;local Target = MouseData.Target
&#9;local Cursors = Content.Cursors
&#9;if not Tool.Enabled then
&#9;&#9;ReloadCounter = (ReloadCounter + 1)
&#9;&#9;if (ReloadCounter % 20) &lt; 10 then
&#9;&#9;&#9;Mouse.Icon = Cursors.ReloadStatic1
&#9;&#9;else
&#9;&#9;&#9;Mouse.Icon = Cursors.ReloadStatic2
&#9;&#9;end
&#9;elseif Target and Functions.FindCharacterAncestor(Target) then
&#9;&#9;Mouse.Icon = Cursors.Target
&#9;else
&#9;&#9;Mouse.Icon = Cursors.Normal
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.Move:connect(function()
&#9;&#9;InvokeServer(&quot;MouseMove&quot;, {Position = Mouse.Hit.p, Target = Mouse.Target})
&#9;end)
&#9;Spawn(function()
&#9;&#9;while ToolEquipped and Mouse do
&#9;&#9;&#9;SetMouseIcon(Mouse)
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;PlayerMouse.Icon = &quot;&quot;
&#9;Animations = {}
end

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
&#9;elseif Mode == &quot;SetMouseIcon&quot; and Value and ToolEquipped then
&#9;&#9;PlayerMouse.Icon = Value
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(LocalObjects, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="Configuration" referent="RBX3B1BF3E012564832B8F1877F909D13EE">
			<Properties>
				<string name="Name">Modules</string>
			</Properties>
			<Item class="ModuleScript" referent="RBX7B277CC26C3B4C7FA203AF2E68AC029B">
				<Properties>
					<string name="Name">Configuration</string>
					<ProtectedString name="Source">--Rescripted by Luckymaxer

Configuration = {
&#9;GunDamage = 25, --Base output damage per shot.
&#9;FireRate = 0.3, --How often the weapon can fire.
&#9;Automatic = false, --hold down to continue firing
&#9;Range = 250, --Max Distance that the weapon can fire.
&#9;Spread = 1, --The bigger the spread, the more inaccurate the shots will be.
&#9;ClipSize = 10, --Shots in a clip
&#9;ReloadTime = 3.4, --Time it takes to reload the tool.
&#9;StartingClips = 10, --If you want infinit clips, remove the IntValue named &quot;Clips&quot; from the tool.
&#9;SegmentLength = 40, --How long the shot Segments are, or the speed of the shot.
&#9;FadeDelayTime = (1 / 60),
&#9;BarrelPosition = CFrame.new(0, 0, -1.2), --L, F, U
&#9;Rate = (1 / 30),
&#9;Colors = {
&#9;&#9;BrickColor.new(&quot;Bright yellow&quot;),
&#9;&#9;BrickColor.new(&quot;Mid gray&quot;),
&#9;&#9;BrickColor.new(&quot;Medium stone grey&quot;),
&#9;&#9;BrickColor.new(&quot;Dark stone grey&quot;)
&#9;},
&#9;FlashColors = {&quot;Medium red&quot;, &quot;Dusty Rose&quot;, &quot;Bright red&quot;, &quot;Really red&quot;},
}

return Configuration</ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXD970ADE309E445ECAAA8FDD574B020C0">
				<Properties>
					<string name="Name">Content</string>
					<ProtectedString name="Source">--Rescripted by Luckymaxer

Content = {
&#9;Cursors ={
&#9;&#9;Normal = &quot;http://www.mulrbx.com/asset/?id=94154683&quot;, --black
&#9;&#9;Target = &quot;http://www.mulrbx.com/asset/?id=94154829&quot;, --red
&#9;&#9;ReloadStatic1 = &quot;http://www.mulrbx.com/asset/?id=94155503&quot;,
&#9;&#9;ReloadStatic2 = &quot;http://www.mulrbx.com/asset/?id=94155569&quot;,
&#9;},
&#9;NumberImages = {
&#9;&#9;[0] = 94128401,
&#9;&#9;[1] = 94128421,
&#9;&#9;[2] = 94128434,
&#9;&#9;[3] = 94128446,
&#9;&#9;[4] = 94128466,
&#9;&#9;[5] = 94128485,
&#9;&#9;[6] = 94128496,
&#9;&#9;[7] = 94128523,
&#9;&#9;[8] = 94128538,
&#9;&#9;[9] = 97903893,
&#9;},
}

return Content</ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX19757F05A8CC4323870E08BEF311FF63">
				<Properties>
					<string name="Name">Functions</string>
					<ProtectedString name="Source">--Rescripted by Luckymaxer

Functions = {}

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

ProjectileNames = {&quot;Water&quot;, &quot;Arrow&quot;, &quot;Projectile&quot;, &quot;Effect&quot;, &quot;Rail&quot;, &quot;Laser&quot;, &quot;Bullet&quot;}

function Functions.IsTeamMate(Player1, Player2)
&#9;return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.Round(Number, Decimal)
&#9;Decimal = (Decimal or 0)
&#9;local Multiplier = (10 ^ Decimal)
&#9;return (math.floor(Number * Multiplier + 0.5) / Multiplier)
end

function Functions.SigNum(Number)
&#9;if Number == 0 then
&#9;&#9;return 1
&#9;end
&#9;return (math.abs(Number) / Number)
end

function Functions.TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Functions.FindCharacterAncestor(Object)
&#9;if Object and Object ~= game:GetService(&quot;Workspace&quot;) then
&#9;&#9;if Object:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;&#9;return Object
&#9;&#9;else
&#9;&#9;&#9;return Functions.FindCharacterAncestor(Object.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

function Functions.WeldBetween(Part1, Part2)
    local Weld = Instance.new(&quot;Weld&quot;)
    Weld.Part0 = Part1
    Weld.Part1 = Part2
    Weld.C0 = CFrame.new()
    Weld.C1 = Part2.CFrame:inverse() * Part1.CFrame
    Weld.Parent = Part1
    return Weld
end

function CheckTableForString(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CheckIntangible(Hit)
&#9;if Hit and Hit.Parent then
&#9;&#9;if Hit.Transparency &gt; 0.8 or CheckTableForString(ProjectileNames, Hit.Name) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
&#9;local Ignore = ((type(Ignore) == &quot;table&quot; and Ignore) or {Ignore})
&#9;local RayHit, RayPos, RayNormal = game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
&#9;if RayHit and CheckIntangible(RayHit) then
&#9;&#9;if DelayIfHit then
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
&#9;end
&#9;return RayHit, RayPos, RayNormal
end

return Functions</ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX7C50525B885E438A9644750B4A93EFC9">
				<Properties>
					<string name="Name">Templates</string>
					<ProtectedString name="Source">--Rescripted by Luckymaxer

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Locked = true
BasePart.CanCollide = true
BasePart.Anchored = false

Bullet = BasePart:Clone()
Bullet.Name = &quot;Bullet&quot;
Bullet.CanCollide = false
BulletMesh = Instance.new(&quot;SpecialMesh&quot;)
BulletMesh.MeshType = Enum.MeshType.FileMesh
BulletMesh.MeshId = &quot;http://www.mulrbx.com/asset/?id=95387759&quot;
BulletMesh.TextureId = &quot;http://www.mulrbx.com/asset/?id=95387789&quot;
BulletMesh.Scale = Vector3.new(3, 3, 3)
BulletMesh.VertexColor = Vector3.new(1, 1, 1)
BulletMesh.Parent = Bullet

Shell = Bullet:Clone()
Shell.Name = &quot;Shell&quot;
Shell.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
Shell.Size = Vector3.new(1, 0.4, 0.33)
Shell.CanCollide = true

SparkEffect = BasePart:Clone()
SparkEffect.Name = &quot;Effect&quot;
SparkEffect.CanCollide = false

Templates = {
&#9;Bullet = Bullet,
&#9;Shell = Shell,
&#9;SparkEffect = SparkEffect,
}

return Templates</ProtectedString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>